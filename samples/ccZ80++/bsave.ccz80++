include bios.ccz80++
include sprite.ccz80++
include graphic.ccz80++
include Random.ccz80++
include Math.ccz80++
include String.ccz80++

class MainClass{
//--- palette data
static short colors[]={0,0,0, 7,4,7, 7,6,5, 4,4,7, 3,2,0, 4,7,1, 5,4,0, 7,3,2, 7,6,2, 0,5,2, 4,5,6, 3,6,4, 1,4,7, 4,4,3, 6,6,5, 7,7,7};

//--- graphic data
static short gradata[]={
// door(12)
#00,#AA,#AA,#AA,#AA,#AA,#AA,#00,#0A,#DD,#DD,#DD,#DD,#DD,#DD,#A0,#AD,#D0,#00,#00,#00,#00,#0D,#DA,#AD,#00,#00,#00,#00,#00,#00,#DA,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#A0,#00,#00,#00,#00,#00,#00,#0A,#D0,#00,#00,#00,#00,#00,#00,#0D,#99,#00,#00,#00,#00,#00,#00,#99,#99,#00,#00,#00,#00,#00,#00,#99,
// gold(13)
#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#06,#80,#00,#00,#00,#00,#00,#00,#68,#82,#00,#00,#00,#00,#00,#06,#86,#28,#20,#00,#00,#00,#00,#08,#88,#82,#80,#00,#00,#00,#00,#86,#88,#28,#28,#00,#00,#00,#00,#68,#28,#88,#82,#00,#00,#00,#06,#88,#88,#88,#28,#20,#00,#00,#08,#68,#88,#28,#88,#80,#00,#00,#86,#88,#88,#88,#88,#28,#00,#00,#68,#68,#88,#82,#82,#82,#00,#06,#86,#86,#86,#88,#88,#28,#20,#08,#68,#68,#68,#68,#68,#68,#60,
// ladder(14)
#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#FF,#FF,#FF,#FF,#FF,#FF,#F0,#0D,#FD,#DD,#DD,#DD,#DD,#DD,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#FF,#FF,#FF,#FF,#FF,#FF,#F0,#0D,#FD,#DD,#DD,#DD,#DD,#DD,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#FF,#FF,#FF,#FF,#FF,#FF,#F0,#0D,#FD,#DD,#DD,#DD,#DD,#DD,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,#0D,#FF,#FF,#FF,#FF,#FF,#FF,#F0,#0D,#FD,#DD,#DD,#DD,#DD,#DD,#F0,#0D,#F0,#00,#00,#00,#00,#0D,#F0,
// ladder(15)
#00,#00,#BB,#09,#B0,#00,#00,#00,#00,#0B,#99,#99,#B0,#00,#00,#00,#00,#B9,#99,#49,#B0,#00,#00,#00,#00,#00,#00,#09,#B0,#BB,#B0,#00,#00,#00,#B0,#09,#99,#99,#BB,#B0,#00,#BB,#BB,#B9,#04,#99,#90,#00,#0B,#B9,#99,#B9,#00,#00,#00,#00,#00,#00,#94,#B9,#B0,#00,#00,#00,#00,#00,#00,#09,#BB,#BB,#B0,#00,#00,#00,#00,#09,#49,#9B,#BB,#00,#00,#0B,#B0,#94,#09,#99,#90,#00,#0B,#BB,#9B,#9B,#00,#00,#00,#00,#00,#99,#49,#99,#B0,#00,#00,#00,#00,#00,#04,#49,#B0,#BB,#B0,#00,#00,#00,#00,#09,#49,#99,#BB,#B0,#00,#00,#00,#04,#94,#99,#90,#00,
// brick(16)
#06,#88,#88,#88,#88,#88,#88,#80,#66,#66,#66,#86,#86,#86,#86,#88,#46,#66,#66,#66,#66,#68,#68,#68,#46,#66,#66,#66,#86,#66,#66,#88,#46,#66,#66,#66,#66,#86,#68,#68,#46,#66,#66,#66,#66,#66,#66,#88,#46,#66,#66,#66,#66,#68,#66,#68,#44,#66,#66,#66,#66,#66,#66,#88,#46,#66,#66,#66,#66,#66,#86,#68,#44,#66,#46,#66,#66,#66,#66,#88,#46,#66,#66,#66,#66,#66,#66,#68,#44,#66,#66,#46,#66,#66,#66,#68,#46,#46,#46,#66,#64,#66,#66,#68,#44,#64,#64,#66,#66,#66,#46,#66,#44,#46,#46,#46,#46,#46,#66,#66,#04,#44,#44,#44,#44,#44,#44,#40,
// conc(17)
#DF,#FF,#FF,#FF,#FF,#FF,#FF,#FE,#DD,#FF,#FF,#FF,#FF,#FF,#FF,#EF,#DD,#EE,#EE,#EE,#EE,#EE,#EE,#FF,#DD,#ED,#DD,#DD,#DD,#DD,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#ED,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#EE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#FE,#EE,#EE,#EE,#DE,#FF,#DD,#EF,#FF,#FF,#FF,#FF,#DE,#FF,#DD,#EE,#EE,#EE,#EE,#EE,#EE,#FF,#DE,#DD,#DD,#DD,#DD,#DD,#DD,#DF,#ED,#DD,#DD,#DD,#DD,#DD,#DD,#DD
  };
//--- font graphic data(compressed)
static short gfontw[]={// 498 bytes,
// 498 bytes,
#6A,#00,#00,#FD,#02,#1C,#0F,#DF,#D0,#03,#69,#0B,#FF,#D0,#0F,#99,#03,#04,#C6,#03,#71,#0B,#17,#9F,#00,#47,#3F,#91,#0F,#FF,#0C,#53,#3F,#03,#FD,#2F,#7C,#03,#AD,#0F,#04,#FB,#3F,#59,#FF,#3B,#37,#C7,#73,#5D,#03,#F1,#0F,#94,#1A,#FD,#F8,#38,#BC,#06,#B9,#7F,#78,#D0,#6F,#A3,#00,#C7,#CA,#D7,#35,#FF,#13,#D7,#07,#5C,#1C,#F8,#00,#F1,#1F,#37,#9C,#2E,#75,#1B,#7F,#F6,#7B,#0F,#47,#C3,#34,#03,#3B,#FD,#E3,#03,#23,#C2,#FF,#3C,#FB,#7A,#79,#FD,#7E,#47,#BF,#97,#0B,#19,#1C,#3E,#DC,#FF,#BC,#1E,#3F,#53,#92,#F5,#FC,#00,#F1,#F2,#ED,#D7,#1E,
#1B,#07,#0B,#C6,#20,#4B,#87,#0E,#FF,#07,#7C,#17,#3C,#30,#39,#75,#E2,#2A,#EB,#37,#01,#23,#8B,#9E,#01,#5C,#00,#13,#4B,#F2,#7E,#01,#32,#E4,#E3,#D7,#2D,#76,#33,#0F,#9E,#F3,#A5,#9C,#A9,#C3,#62,#DB,#3B,#CF,#44,#3F,#09,#BB,#6B,#37,#63,#9F,#BE,#41,#25,#D7,#BD,#70,#96,#FB,#23,#C3,#B8,#D7,#F3,#7B,#FD,#7E,#CF,#80,#85,#AB,#6F,#57,#7B,#08,#A3,#4C,#F8,#73,#C7,#BB,#3E,#3F,#3E,#7F,#9D,#1F,#C7,#9E,#84,#D4,#F5,#B7,#1D,#78,#1F,#53,#FF,#5C,#03,#47,#FF,#94,#FF,#B7,#4F,#B2,#EB,#DC,#93,#70,#FD,#9F,#97,#69,#FB,#F3,#97,#FF,#2A,#80,#7C,
#F9,#FB,#F7,#9F,#FF,#39,#AF,#61,#FF,#7B,#CC,#8F,#79,#CF,#DF,#1C,#1B,#4F,#C9,#8F,#09,#7E,#1F,#0A,#DF,#A3,#DB,#B7,#5E,#0B,#6F,#F6,#C6,#BB,#7C,#A5,#93,#65,#97,#8C,#4A,#63,#DF,#A3,#5E,#25,#5B,#3B,#26,#CC,#F1,#B8,#CB,#D3,#87,#3F,#72,#E7,#DB,#FD,#3F,#C6,#8E,#48,#8B,#F3,#E6,#3F,#CB,#36,#87,#F8,#8E,#C7,#BB,#3F,#BE,#C2,#F7,#3F,#03,#8A,#BF,#6A,#EB,#38,#F9,#7F,#29,#87,#CB,#7F,#CE,#B7,#BB,#78,#00,#47,#C7,#FF,#DE,#FD,#8F,#FF,#2F,#3F,#39,#C3,#6E,#FF,#5D,#E3,#8B,#89,#FF,#72,#B6,#AF,#F9,#1B,#F1,#3B,#FD,#00,#FD,#77,#4B,#0F,#AF,
#55,#8B,#DF,#01,#C7,#9F,#5E,#14,#B3,#E5,#92,#5C,#FA,#01,#D7,#F3,#7F,#17,#04,#A3,#B1,#D3,#9E,#4E,#DF,#0C,#7D,#25,#FD,#3F,#E5,#CF,#9B,#C3,#66,#C6,#DB,#B7,#DF,#08,#BF,#EA,#BF,#5B,#DF,#FB,#0E,#01,#E7,#B0,#AB,#CB,#70,#EF,#D7,#3B,#D2,#72,#A6,#8F,#7C,#7C,#3C,#77,#5C,#FD,#07,#FA,#3B,#3E,#FD,#3F,#29,#DB,#F0,#F5,#3F,#AD,#E7,#C7,#9F,#3F,#D3,#73,#F3,#3F,#AF,#C3,#38,#AF,#F3,#97,#D3,#39,#FF,#71,#9F,#87,#1E,#CF,#EF,#00,#F6,#FF,#00,#FF,#E0};
  
static int v,i,j;
static short g1[2048],sx,sy;
static void main(){
 //---------- initilize
 bios.color(15,0,0);
 bios.screen(5);
 sprite.mode(2); // 0:8x8 1:8x8(x2) 2:16x16 3:16x16(x2)

 //---------- color palette
 for(i=0;i<16;i++)graphic.color(i,colors[i*3],colors[i*3+1],colors[i*3+2]);

 //---------- fonts
 graphic.setpage(1,0);
 graphic.box(0,0,256,212,0);
 graphic.put_compress(0,96,128,32,&gfontw,&g1);

 //---------- graphic
 const GSZ=16;
 for(v=0;v<6;v++){
  sx=(v&15)*16;sy=(v/16)*16;
  graphic.put(sx,sy,GSZ,GSZ,&gradata+v*GSZ*GSZ/2);} // SC5:GSZ*GSZ/2 SC8:GSZ*GSZ
 graphic.setpage(0,1);
 
 for(i=0;i<12;i++)for(j=0;j<16;j++){
  graphic.copy((Random.Next()%16)*16,(Random.Next()%12)*16,16,16,(Random.Next()%5)*16,0,graphic.SRCTIMP);}
 
  graphic.bsave("TEST1.SC5",0,#769F);
  print(20,20,"BSAVE COMPLETED");
  print(20,40,"PUSH SPACE KEY");
  while(bios.strig(0)==0);
  
  graphic.cls();
  for(i=0;i<15;i++)graphic.color(i,i,i,i);
 
  graphic.bload("TEST1.SC5");
  graphic.colorrestore();
  print(20,20,"BLOAD COMPLETED");
  print(20,40,"PUSH SPACE KEY");
  while(bios.strig(0)==0);
 }
 
static void print(int X,int Y,int S){
 while(*S){
  graphic.copy(X,Y,8,8,((*S-32)&15)*8,((*S-32)/16)*8+96, graphic.SRCIMP);
  ++S;X+=8;}}

}