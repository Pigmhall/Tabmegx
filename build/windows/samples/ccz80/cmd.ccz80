asm
{
"__ldirmv: equ #0059",
"__ldirvm: equ #005C",
"__chgmod: equ #005F",
"__filvrm: equ #0056",
"__wrtvrm: equ #004D",
"__getbyt: equ #521C",
"__ptrget: equ #5EA4",
"jp init",
//--- cls
"cls:ld hl,#1800","ld bc,768","ld a,0","call __filvrm",
"ret",

//--- init(hl=screen mod)
"init:	INC	HL",
"INC	HL",
"LD	E,(HL)",
"INC	(HL)",
"LD	D,(HL)",
"push de",

// backup screen 1 font
"ld hl,0",
"ld de,fonts",
"ld bc,#800",
"call __ldirmv",

// change screen
"pop hl",
"ld a,l",
"call __chgmod",

// restore font
"ld hl,fonts","ld de,#0","ld bc,#800","call __ldirvm",
"ld hl,fonts","ld de,#800","ld bc,#800","call __ldirvm",
"ld hl,fonts","ld de,#1000","ld bc,#800","call __ldirvm",
"ld hl,#2000","ld bc,#1800","ld a,#f0","call __filvrm",

// cmd init
"	LD	A,#0C3",
"	LD	(#FE0D),A",
"	LD	HL,cmdprog",
"	LD	(#FE0E),HL",
"jr cls",
"cmdprog:POP	AF",
"	CALL	__getbyt",
"	LD	D,#00",
"	PUSH	DE",
"	INC	HL",
"	CALL	__getbyt",
"	LD	D,#00",
"	EX	DE,HL",
"	ADD	HL,HL",
"	ADD	HL,HL",
"	ADD	HL,HL",
"	ADD	HL,HL",
"	ADD	HL,HL",
"	LD	BC,#1800",
"	ADD	HL,BC",
"	POP	BC",
"	ADD	HL,BC",
"	PUSH	HL",
"	EX	DE,HL",
"	INC	HL",
"	CALL	__ptrget",
"	PUSH	HL",
"	EX	DE,HL",
"	LD	A,(HL)",
"	INC	HL",
"	LD	E,(HL)",
"	INC	HL",
"	LD	D,(HL)",
"	POP	BC",
"	POP	HL",
"	PUSH	BC",
"	LD	B,A",
"loop1:	LD	A,(DE)",
"	CALL	__wrtvrm",
"	INC	HL",
"	INC	DE",
"	DJNZ	loop1",
"	POP	HL",
"	RET",
"fonts:"
}
