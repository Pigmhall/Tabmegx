addMatrix4 ,Matrix4Result, Matrix4A, Matrix4B,3dmaths\ADD MATRIX4.htm
addVector2 ,VectorResult, VectorA, VectorB,3dmaths\ADD VECTOR2.htm
addVector3 ,VectorResult, VectorA, VectorB,3dmaths\ADD VECTOR3.htm
addVector4 ,VectorResult, VectorA, VectorB,3dmaths\ADD VECTOR4.htm
buildLookatLhmatrix4 ,Matrix4Result, Vector3Eye, Vector3At, Vector3Up,3dmaths\BUILD LOOKAT LHMATRIX4.htm
buildLookatRhmatrix4 ,Matrix4Result, Vector3Eye, Vector3At, Vector3Up,3dmaths\BUILD LOOKAT RHMATRIX4.htm
buildOrthoLhmatrix4 ,Matrix4Result, Width, Height, Near, Far,3dmaths\BUILD ORTHO LHMATRIX4.htm
buildOrthoRhmatrix4 ,Matrix4Result, Width, Height, Near, Far,3dmaths\BUILD ORTHO RHMATRIX4.htm
buildFovLhmatrix4 ,Matrix4Result, FOV, Aspect, Near, Far,3dmaths\BUILD FOV LHMATRIX4.htm
buildFovRhmatrix4 ,Matrix4Result, FOV, Aspect, Near, Far,3dmaths\BUILD FOV RHMATRIX4.htm
buildPerspectiveLhmatrix4 ,Matrix4Result, Width, Height, Near, Far,3dmaths\BUILD PERSPECTIVE LHMATRIX4.htm
buildPerspectiveRhmatrix4 ,Matrix4Result, Width, Height, Near, Far,3dmaths\BUILD PERSPECTIVE RHMATRIX4.htm
buildReflectionMatrix4 ,Matrix4Result, PlaneA, PlaneB, PlaneC, PlaneD,3dmaths\BUILD REFLECTION MATRIX4.htm
buildRotationAxisMatrix4 ,Matrix4Result, Vector3Axis, Angle,3dmaths\BUILD ROTATION AXIS MATRIX4.htm
catmullromVector2 ,VectorResult, VectorA, VectorB, VectorC, VectorD, Value,3dmaths\CATMULLROM VECTOR2.htm
catmullromVector3 ,VectorResult, VectorA, VectorB, VectorC, VectorD, Value,3dmaths\CATMULLROM VECTOR3.htm
catmullromVector4 ,VectorResult, VectorA, VectorB, VectorC, VectorD, Value,3dmaths\CATMULLROM VECTOR4.htm
copyMatrix4 ,Matrix4Result, Matrix4Source,3dmaths\COPY MATRIX4.htm
copyVector2 ,VectorResult, VectorSource,3dmaths\COPY VECTOR2.htm
copyVector3 ,VectorResult, VectorSource,3dmaths\COPY VECTOR3.htm
copyVector4 ,VectorResult, VectorSource,3dmaths\COPY VECTOR4.htm
crossProductVector3 ,VectorResult, VectorA, VectorB,3dmaths\CROSS PRODUCT VECTOR3.htm
deleteMatrix4(,Return Integer=(Matrix4Result),3dmaths\DELETE MATRIX4.htm
deleteVector2(,Return Integer=(Vector),3dmaths\DELETE VECTOR2.htm
deleteVector3(,Return Integer=(Vector),3dmaths\DELETE VECTOR3.htm
deleteVector4(,Return Integer=(Vector),3dmaths\DELETE VECTOR4.htm
divideMatrix4 ,Matrix4Result, Value,3dmaths\DIVIDE MATRIX4.htm
divideVector2 ,VectorResult, Value,3dmaths\DIVIDE VECTOR2.htm
divideVector3 ,VectorResult, Value,3dmaths\DIVIDE VECTOR3.htm
divideVector4 ,VectorResult, Value,3dmaths\DIVIDE VECTOR4.htm
dotProductVector2(,Return Float=(VectorA, VectorB),3dmaths\DOT PRODUCT VECTOR2.htm
dotProductVector3(,Return Float=(VectorA, VectorB),3dmaths\DOT PRODUCT VECTOR3.htm
bccVector2 ,VectorResult, VectorA, VectorB, VectorC, FValue, GBValue,3dmaths\BCC VECTOR2.htm
bccVector3 ,VectorResult, VectorA, VectorB, VectorC, FValue, GBValue,3dmaths\BCC VECTOR3.htm
bccVector4 ,VectorResult, VectorA, VectorB, VectorC, FValue, GBValue,3dmaths\BCC VECTOR4.htm
ccwVector2(,Return Float=(VectorA, VectorB),3dmaths\CCW VECTOR2.htm
squaredLengthVector2(,Return Float=(Vector),3dmaths\SQUARED LENGTH VECTOR2.htm
squaredLengthVector3(,Return Float=(Vector),3dmaths\SQUARED LENGTH VECTOR3.htm
squaredLengthVector4(,Return Float=(Vector),3dmaths\SQUARED LENGTH VECTOR4.htm
lengthVector2(,Return Float=(Vector),3dmaths\LENGTH VECTOR2.htm
lengthVector3(,Return Float=(Vector),3dmaths\LENGTH VECTOR3.htm
lengthVector4(,Return Float=(Vector),3dmaths\LENGTH VECTOR4.htm
projectionMatrix4 ,Matrix4Result,3dmaths\PROJECTION MATRIX4.htm
viewMatrix4 ,Matrix4Result,3dmaths\VIEW MATRIX4.htm
wVector4(,Return Float=(Vector),3dmaths\W VECTOR4.htm
worldMatrix4 ,Matrix4Result,3dmaths\WORLD MATRIX4.htm
xVector2(,Return Float=(Vector),3dmaths\X VECTOR2.htm
xVector3(,Return Float=(Vector),3dmaths\X VECTOR3.htm
xVector4(,Return Float=(Vector),3dmaths\X VECTOR4.htm
yVector2(,Return Float=(Vector),3dmaths\Y VECTOR2.htm
yVector3(,Return Float=(Vector),3dmaths\Y VECTOR3.htm
yVector4(,Return Float=(Vector),3dmaths\Y VECTOR4.htm
zVector3(,Return Float=(Vector),3dmaths\Z VECTOR3.htm
zVector4(,Return Float=(Vector),3dmaths\Z VECTOR4.htm
hermiteVector2 ,VectorResult, VectorA, VectorB, VectorC, VectorD, SValue,3dmaths\HERMITE VECTOR2.htm
hermiteVector3 ,VectorResult, VectorA, VectorB, VectorC, VectorD, SValue,3dmaths\HERMITE VECTOR3.htm
hermiteVector4 ,VectorResult, VectorA, VectorB, VectorC, VectorD, SValue,3dmaths\HERMITE VECTOR4.htm
inverseMatrix4(,Return Float=(Matrix4Result, Matrix4Source),3dmaths\INVERSE MATRIX4.htm
isEqualMatrix4(,Return Integer=(Matrix4A, Matrix4B),3dmaths\IS EQUAL MATRIX4.htm
isEqualVector2(,Return Integer=(VectorA, VectorB),3dmaths\IS EQUAL VECTOR2.htm
isEqualVector3(,Return Integer=(VectorA, VectorB),3dmaths\IS EQUAL VECTOR3.htm
isEqualVector4(,Return Integer=(VectorA, VectorB),3dmaths\IS EQUAL VECTOR4.htm
isIdentityMatrix4(,Return Integer=(Matrix4Result),3dmaths\IS IDENTITY MATRIX4.htm
linearInterpolateVector2 ,VectorResult, VectorA, VectorB, SValue,3dmaths\LINEAR INTERPOLATE VECTOR2.htm
linearInterpolateVector3 ,VectorResult, VectorA, VectorB, SValue,3dmaths\LINEAR INTERPOLATE VECTOR3.htm
linearInterpolateVector4 ,VectorResult, VectorA, VectorB, SValue,3dmaths\LINEAR INTERPOLATE VECTOR4.htm
makeMatrix4(,Return Integer=(Matrix4),3dmaths\MAKE MATRIX4.htm
makeVector2(,Return Integer=(Vector),3dmaths\MAKE VECTOR2.htm
makeVector3(,Return Integer=(Vector),3dmaths\MAKE VECTOR3.htm
makeVector4(,Return Integer=(Vector),3dmaths\MAKE VECTOR4.htm
maximizeVector2 ,VectorResult, VectorA, VectorB,3dmaths\MAXIMIZE VECTOR2.htm
maximizeVector3 ,VectorResult, VectorA, VectorB,3dmaths\MAXIMIZE VECTOR3.htm
maximizeVector4 ,VectorResult, VectorA, VectorB,3dmaths\MAXIMIZE VECTOR4.htm
minimizeVector2 ,VectorResult, VectorA, VectorB,3dmaths\MINIMIZE VECTOR2.htm
minimizeVector3 ,VectorResult, VectorA, VectorB,3dmaths\MINIMIZE VECTOR3.htm
minimizeVector4 ,VectorResult, VectorA, VectorB,3dmaths\MINIMIZE VECTOR4.htm
multiplyMatrix4 ,Matrix4Result, Matrix4A, Matrix4B,3dmaths\MULTIPLY MATRIX4.htm
multiplyVector2 ,VectorResult, Value,3dmaths\MULTIPLY VECTOR2.htm
multiplyVector3 ,VectorResult, Value,3dmaths\MULTIPLY VECTOR3.htm
multiplyVector4 ,VectorResult, Value,3dmaths\MULTIPLY VECTOR4.htm
normalizeVector2 ,VectorResult, VectorSource,3dmaths\NORMALIZE VECTOR2.htm
normalizeVector3 ,VectorResult, VectorSource,3dmaths\NORMALIZE VECTOR3.htm
normalizeVector4 ,VectorResult, VectorSource,3dmaths\NORMALIZE VECTOR4.htm
projectVector3 ,VectorResult, VectorSource, Matrix4Projection, Matrix4View, Matrix4World,3dmaths\PROJECT VECTOR3.htm
rotateXMatrix4 ,Matrix4Result, Angle,3dmaths\ROTATE X MATRIX4.htm
rotateYMatrix4 ,Matrix4Result, Angle,3dmaths\ROTATE Y MATRIX4.htm
rotateYprMatrix4 ,Matrix4Result, Yaw, Pitch, Roll,3dmaths\ROTATE YPR MATRIX4.htm
rotateZMatrix4 ,Matrix4Result, Angle,3dmaths\ROTATE Z MATRIX4.htm
scaleMatrix4 ,Matrix4Result, X, Y, Z,3dmaths\SCALE MATRIX4.htm
scaleVector2 ,VectorResult, VectorSource, Value,3dmaths\SCALE VECTOR2.htm
scaleVector3 ,VectorResult, VectorSource, Value,3dmaths\SCALE VECTOR3.htm
scaleVector4 ,VectorResult, VectorSource, Value,3dmaths\SCALE VECTOR4.htm
setIdentityMatrix4 ,Matrix4Result,3dmaths\SET IDENTITY MATRIX4.htm
setVector2 ,VectorResult, X, Y,3dmaths\SET VECTOR2.htm
setVector3 ,VectorResult, X, Y, Z,3dmaths\SET VECTOR3.htm
setVector4 ,VectorResult, X, Y, Z, W,3dmaths\SET VECTOR4.htm
subtractMatrix4 ,Matrix4Result, Matrix4A, Matrix4B,3dmaths\SUBTRACT MATRIX4.htm
subtractVector2 ,VectorResult, VectorA, VectorB,3dmaths\SUBTRACT VECTOR2.htm
subtractVector3 ,VectorResult, VectorA, VectorB,3dmaths\SUBTRACT VECTOR3.htm
subtractVector4 ,VectorResult, VectorA, VectorB,3dmaths\SUBTRACT VECTOR4.htm
transformVector4 ,VectorResult, VectorSource, Matrix4Source,3dmaths\TRANSFORM VECTOR4.htm
transformCoordsVector2 ,VectorResult, VectorSource, Matrix4Source,3dmaths\TRANSFORM COORDS VECTOR2.htm
transformCoordsVector3 ,VectorResult, VectorSource, Matrix4Source,3dmaths\TRANSFORM COORDS VECTOR3.htm
transformNormalsVector3 ,VectorResult, VectorSource, Matrix4Source,3dmaths\TRANSFORM NORMALS VECTOR3.htm
translateMatrix4 ,Matrix4Result, X, Y, Z,3dmaths\TRANSLATE MATRIX4.htm
transposeMatrix4 ,Matrix4Result, Matrix4Source,3dmaths\TRANSPOSE MATRIX4.htm
loadAnimation ,Filename,Animation Number,animation\LOAD ANIMATION.htm
loadDvdAnimation ,Animation Number,animation\LOAD DVD ANIMATION.htm
deleteAnimation ,Animation Number,animation\DELETE ANIMATION.htm
playAnimation ,Animation Number,animation\PLAY ANIMATION.htm
playAnimationToImage ,Animation Number,Image,Left,Top,Right,Bottom,animation\PLAY ANIMATION TO IMAGE.htm
loopAnimation ,Animation Number,animation\LOOP ANIMATION.htm
stopAnimation ,Animation Number,animation\STOP ANIMATION.htm
pauseAnimation ,Animation Number,animation\PAUSE ANIMATION.htm
resumeAnimation ,Animation Number,animation\RESUME ANIMATION.htm
placeAnimation ,Animation Number,X,Y,X,Y,animation\PLACE ANIMATION.htm
setAnimationVolume ,Animation Number, Volume,animation\SET ANIMATION VOLUME.htm
setAnimationSpeed ,Animation Number, Speed,animation\SET ANIMATION SPEED.htm
setDvdChapter ,Animation Number, Title Number, Chapter Number,animation\SET DVD CHAPTER.htm
animationExist(,Return Integer=(Animation Number),animation\ANIMATION EXIST.htm
animationWidth(,Return Integer=(Animation Number),animation\ANIMATION WIDTH.htm
animationHeight(,Return Integer=(Animation Number),animation\ANIMATION HEIGHT.htm
animationPlaying(,Return Integer=(Animation Number),animation\ANIMATION PLAYING.htm
animationLooping(,Return Integer=(Animation Number),animation\ANIMATION LOOPING.htm
animationPaused(,Return Integer=(Animation Number),animation\ANIMATION PAUSED.htm
animationPositionX(,Return Integer=(Animation Number),animation\ANIMATION POSITION X.htm
animationPositionY(,Return Integer=(Animation Number),animation\ANIMATION POSITION Y.htm
animationVolume(,Return Integer=(Animation Number),animation\ANIMATION VOLUME.htm
animationSpeed(,Return Integer=(Animation Number),animation\ANIMATION SPEED.htm
totalDvdChapters(,Return Integer=(Animation Number, Title Number),animation\TOTAL DVD CHAPTERS.htm
ink ,Foreground Color,Background Color,basic2d\INK.htm
cls ,Color Value,basic2d\CLS.htm
dot ,X,Y,basic2d\DOT.htm
line ,X1,Y1,X2,Y2,basic2d\LINE.htm
box ,Left,Top,Right,Bottom,basic2d\BOX.htm
circle ,X,Y,Radius,basic2d\CIRCLE.htm
ellipse ,X,Y,X Radius,Y Radius,basic2d\ELLIPSE.htm
lockPixels,,basic2d\LOCK PIXELS.htm
unlockPixels,,basic2d\UNLOCK PIXELS.htm
rgb(,Return DWORD=(Red Value,Green Value,Blue Value),basic2d\RGB.htm
rgbr(,Return Integer=(Red Value),basic2d\RGBR.htm
rgbg(,Return Integer=(Green Value),basic2d\RGBG.htm
rgbb(,Return Integer=(Blue Value),basic2d\RGBB.htm
point(,Return DWORD=(X,Y),basic2d\POINT.htm
getPixelsPointer(,Return DWORD=(),basic2d\GET PIXELS POINTER.htm
getPixelsPitch(,Return Integer=(),basic2d\GET PIXELS PITCH.htm
loadObject ,Filename, Object Number,basic3d\LOAD OBJECT.htm
appendObject ,Filename, Object Number, Start Frame,basic3d\APPEND OBJECT.htm
cloneObject ,Object Number, Source Object,basic3d\CLONE OBJECT.htm
instanceObject ,Object Number, Source Object,basic3d\INSTANCE OBJECT.htm
deleteObject ,Object Number,basic3d\DELETE OBJECT.htm
deleteObjects ,Object Number From, Object Number To,basic3d\DELETE OBJECTS.htm
saveObject ,Filename, Object Number,basic3d\SAVE OBJECT.htm
positionObject ,Object Number, X, Y, Z,basic3d\POSITION OBJECT.htm
scaleObject ,Object Number, XSize, YSize, ZSize,basic3d\SCALE OBJECT.htm
rotateObject ,Object Number, XAngle, YAngle, ZAngle,basic3d\ROTATE OBJECT.htm
moveObject ,Object Number, Speed,basic3d\MOVE OBJECT.htm
pointObject ,Object Number, X, Y, Z,basic3d\POINT OBJECT.htm
moveObjectDown ,Object Number, Value,basic3d\MOVE OBJECT DOWN.htm
moveObjectLeft ,Object Number, Value,basic3d\MOVE OBJECT LEFT.htm
moveObjectRight ,Object Number, Value,basic3d\MOVE OBJECT RIGHT.htm
moveObjectUp ,Object Number, Value,basic3d\MOVE OBJECT UP.htm
xrotateObject ,Object Number, XAngle,basic3d\XROTATE OBJECT.htm
yrotateObject ,Object Number, YAngle,basic3d\YROTATE OBJECT.htm
zrotateObject ,Object Number, ZAngle,basic3d\ZROTATE OBJECT.htm
turnObjectLeft ,Object Number, Value,basic3d\TURN OBJECT LEFT.htm
turnObjectRight ,Object Number, Value,basic3d\TURN OBJECT RIGHT.htm
pitchObjectUp ,Object Number, Value,basic3d\PITCH OBJECT UP.htm
pitchObjectDown ,Object Number, Value,basic3d\PITCH OBJECT DOWN.htm
rollObjectLeft ,Object Number, Value,basic3d\ROLL OBJECT LEFT.htm
rollObjectRight ,Object Number, Value,basic3d\ROLL OBJECT RIGHT.htm
showObject ,Object Number,basic3d\SHOW OBJECT.htm
hideObject ,Object Number,basic3d\HIDE OBJECT.htm
playObject ,Object Number,basic3d\PLAY OBJECT.htm
loopObject ,Object Number,basic3d\LOOP OBJECT.htm
stopObject ,Object Number,basic3d\STOP OBJECT.htm
setObjectFrame ,Object Number, Frame,basic3d\SET OBJECT FRAME.htm
setObjectSpeed ,Object Number, Speed,basic3d\SET OBJECT SPEED.htm
setObjectInterpolation ,Object Number, Interpolation,basic3d\SET OBJECT INTERPOLATION.htm
setGlobalObjectCreation ,Creation Mode,basic3d\SET GLOBAL OBJECT CREATION.htm
makeObject ,Object Number, Mesh Index, Image Number,basic3d\MAKE OBJECT.htm
makeObjectBox ,Object Number, Width, Height, Depth,basic3d\MAKE OBJECT BOX.htm
makeObjectCone ,Object Number, Size,basic3d\MAKE OBJECT CONE.htm
makeObjectCube ,Object Number, Size,basic3d\MAKE OBJECT CUBE.htm
makeObjectCylinder ,Object Number, Size,basic3d\MAKE OBJECT CYLINDER.htm
makeObjectFromLimb ,Object Number, Second Object, Limb Number,basic3d\MAKE OBJECT FROM LIMB.htm
makeObjectPlain ,Object Number, Width, Height,basic3d\MAKE OBJECT PLAIN.htm
makeObjectSphere ,Object Number, Size,basic3d\MAKE OBJECT SPHERE.htm
makeObjectTriangle ,Object Number, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3,basic3d\MAKE OBJECT TRIANGLE.htm
textureObject ,Object Number, Image Number,basic3d\TEXTURE OBJECT.htm
colorObject ,Object Number, Color Value,basic3d\COLOR OBJECT.htm
ghostObjectOn ,Object Number,basic3d\GHOST OBJECT ON.htm
ghostObjectOff ,Object Number,basic3d\GHOST OBJECT OFF.htm
fadeObject ,Object Number, Fade Value,basic3d\FADE OBJECT.htm
lockObjectOn ,Object Number,basic3d\LOCK OBJECT ON.htm
lockObjectOff ,Object Number,basic3d\LOCK OBJECT OFF.htm
setObjectTexture ,Object Number, Texturing Mode, Mipmap Flag,basic3d\SET OBJECT TEXTURE.htm
scaleObjectTexture ,Object Number, UScale, VScale,basic3d\SCALE OBJECT TEXTURE.htm
scrollObjectTexture ,Object Number, X, Y,basic3d\SCROLL OBJECT TEXTURE.htm
setTextureMd3 ,Object Number, H0, H1, L0, L1, L2, U0,basic3d\SET TEXTURE MD3.htm
setObjectSmoothing ,Object Number, Percentage,basic3d\SET OBJECT SMOOTHING.htm
showObjectBounds ,Object Number,basic3d\SHOW OBJECT BOUNDS.htm
hideObjectBounds ,Object Number,basic3d\HIDE OBJECT BOUNDS.htm
excludeObjectOn ,Object Number,basic3d\EXCLUDE OBJECT ON.htm
excludeObjectOff ,Object Number,basic3d\EXCLUDE OBJECT OFF.htm
setObject ,Object Number, Wire, Transparent, Cull,basic3d\SET OBJECT.htm
setObjectWireframe ,Object Number, Flag,basic3d\SET OBJECT WIREFRAME.htm
setObjectTransparency ,Object Number, Flag,basic3d\SET OBJECT TRANSPARENCY.htm
setObjectCull ,Object Number, Flag,basic3d\SET OBJECT CULL.htm
setObjectFilter ,Object Number, Flag,basic3d\SET OBJECT FILTER.htm
setObjectLight ,Object Number, Flag,basic3d\SET OBJECT LIGHT.htm
setObjectFog ,Object Number, Flag,basic3d\SET OBJECT FOG.htm
setObjectAmbient ,Object Number, Flag,basic3d\SET OBJECT AMBIENT.htm
setObjectRotationXyz ,Object Number,basic3d\SET OBJECT ROTATION XYZ.htm
setObjectRotationZyx ,Object Number,basic3d\SET OBJECT ROTATION ZYX.htm
setObjectToCameraOrientation ,Object Number,basic3d\SET OBJECT TO CAMERA ORIENTATION.htm
setObjectToObjectOrientation ,Object Number, Second Object,basic3d\SET OBJECT TO OBJECT ORIENTATION.htm
disableObjectZdepth ,Object Number,basic3d\DISABLE OBJECT ZDEPTH.htm
enableObjectZdepth ,Object Number,basic3d\ENABLE OBJECT ZDEPTH.htm
glueObjectToLimb ,Object Number, Second Object, Limb Number,basic3d\GLUE OBJECT TO LIMB.htm
unglueObject ,Object Number,basic3d\UNGLUE OBJECT.htm
fixObjectPivot ,Object Number,basic3d\FIX OBJECT PIVOT.htm
setObjectDiffuse ,Object Number, Color Value,basic3d\SET OBJECT DIFFUSE.htm
setObjectAmbience ,Object Number, Color Value,basic3d\SET OBJECT AMBIENCE.htm
setObjectSpecular ,Object Number, Color Value,basic3d\SET OBJECT SPECULAR.htm
setObjectEmissive ,Object Number, Color Value,basic3d\SET OBJECT EMISSIVE.htm
setObjectSpecularPower ,Object Number, Power,basic3d\SET OBJECT SPECULAR POWER.htm
setLightMappingOn ,Object Number, Image Number,basic3d\SET LIGHT MAPPING ON.htm
setDetailMappingOn ,Object Number, Image Number,basic3d\SET DETAIL MAPPING ON.htm
setBlendMappingOn ,Object Number, Image Number, Blend Mode,basic3d\SET BLEND MAPPING ON.htm
setSphereMappingOn ,Object Number, Image Number,basic3d\SET SPHERE MAPPING ON.htm
setCubeMappingOn ,Object Number, Face1, Face2, Face3, Face4, Face5, Face6,basic3d\SET CUBE MAPPING ON.htm
setBumpMappingOn ,Object Number, Image Number,basic3d\SET BUMP MAPPING ON.htm
setCartoonShadingOn ,Object Number, Shade Image, Edge Image,basic3d\SET CARTOON SHADING ON.htm
setRainbowShadingOn ,Object Number, Rainbow Image,basic3d\SET RAINBOW SHADING ON.htm
setShadowShadingOn ,Object Number,basic3d\SET SHADOW SHADING ON.htm
setReflectionShadingOn ,Object Number,basic3d\SET REFLECTION SHADING ON.htm
setAlphaMappingOn ,Object Number, Percentage,basic3d\SET ALPHA MAPPING ON.htm
setEffectOn ,Object Number, FX Filename, Texture Flag,basic3d\SET EFFECT ON.htm
setShadingOff ,Object Number,basic3d\SET SHADING OFF.htm
setShadowShadingOff ,Object Number,basic3d\SET SHADOW SHADING OFF.htm
loadEffect ,Filename, Effect Number, Texture Flag,basic3d\LOAD EFFECT.htm
deleteEffect ,Effect Number,basic3d\DELETE EFFECT.htm
setObjectEffect ,Object Number, Effect Number,basic3d\SET OBJECT EFFECT.htm
setLimbEffect ,Object Number, Limb Number, Effect Number,basic3d\SET LIMB EFFECT.htm
performChecklistForEffectValues ,Effect Number,basic3d\PERFORM CHECKLIST FOR EFFECT VALUES.htm
performChecklistForEffectErrors ,Effect Number,basic3d\PERFORM CHECKLIST FOR EFFECT ERRORS.htm
setEffectConstantBoolean ,Effect Number, Constant String, Constant Value,basic3d\SET EFFECT CONSTANT BOOLEAN.htm
setEffectConstantInteger ,Effect Number, Constant String, Constant Value,basic3d\SET EFFECT CONSTANT INTEGER.htm
setEffectConstantFloat ,Effect Number, Constant String, Constant Value,basic3d\SET EFFECT CONSTANT FLOAT.htm
setEffectConstantVector ,Effect Number, Constant String, Vector Number,basic3d\SET EFFECT CONSTANT VECTOR.htm
setEffectConstantMatrix ,Effect Number, Constant String, Matrix Number,basic3d\SET EFFECT CONSTANT MATRIX.htm
setEffectTechnique ,Effect Number, Technique Name,basic3d\SET EFFECT TECHNIQUE.htm
setEffectTranspose ,Effect Number, Transpose Flag,basic3d\SET EFFECT TRANSPOSE.htm
setObjectFov ,Object Number, FOV Angle,basic3d\SET OBJECT FOV.htm
setObjectNormals ,Object Number,basic3d\SET OBJECT NORMALS.htm
enableObjectZbias ,Object Number, Slope Scale, Depth,basic3d\ENABLE OBJECT ZBIAS.htm
disableObjectZbias ,Object Number,basic3d\DISABLE OBJECT ZBIAS.htm
makeObjectCollisionBox ,Object Number, X1, Y1, Z1, X2, Y2, Z2, Collision Flag,basic3d\MAKE OBJECT COLLISION BOX.htm
deleteObjectCollisionBox ,Object Number,basic3d\DELETE OBJECT COLLISION BOX.htm
setObjectCollisionOn ,Object Number,basic3d\SET OBJECT COLLISION ON.htm
setObjectCollisionOff ,Object Number,basic3d\SET OBJECT COLLISION OFF.htm
setObjectCollisionToBoxes ,Object Number,basic3d\SET OBJECT COLLISION TO BOXES.htm
setObjectCollisionToPolygons ,Object Number,basic3d\SET OBJECT COLLISION TO POLYGONS.htm
setObjectCollisionToSpheres ,Object Number,basic3d\SET OBJECT COLLISION TO SPHERES.htm
setGlobalCollisionOn,,basic3d\SET GLOBAL COLLISION ON.htm
setGlobalCollisionOff,,basic3d\SET GLOBAL COLLISION OFF.htm
setObjectRadius ,Object Number, Radius,basic3d\SET OBJECT RADIUS.htm
automaticObjectCollision ,Object Number, Radius, Response,basic3d\AUTOMATIC OBJECT COLLISION.htm
automaticCameraCollision ,Camera Number, Radius, Response,basic3d\AUTOMATIC CAMERA COLLISION.htm
calculateAutomaticCollision,,basic3d\CALCULATE AUTOMATIC COLLISION.htm
performChecklistForObjectLimbs ,Object Number,basic3d\PERFORM CHECKLIST FOR OBJECT LIMBS.htm
offsetLimb ,Object Number, Limb Number, X, Y, Z,basic3d\OFFSET LIMB.htm
scaleLimb ,Object Number, Limb Number, XSize, YSize, ZSize,basic3d\SCALE LIMB.htm
rotateLimb ,Object Number, Limb Number, XAngle, YAngle, ZAngle,basic3d\ROTATE LIMB.htm
showLimb ,Object Number, Limb Number,basic3d\SHOW LIMB.htm
hideLimb ,Object Number, Limb Number,basic3d\HIDE LIMB.htm
textureLimb ,Object Number, Limb Number, Image Number,basic3d\TEXTURE LIMB.htm
colorLimb ,Object Number, Limb Number, Color Value,basic3d\COLOR LIMB.htm
scaleLimbTexture ,Object Number, Limb Number, UScale, VScale,basic3d\SCALE LIMB TEXTURE.htm
scrollLimbTexture ,Object Number, Limb Number, X, Y,basic3d\SCROLL LIMB TEXTURE.htm
addLimb ,Object Number, Limb Number, Mesh Number,basic3d\ADD LIMB.htm
linkLimb ,Object Number, Limb Parent, Limb Child,basic3d\LINK LIMB.htm
removeLimb ,Object Number, Limb Number,basic3d\REMOVE LIMB.htm
setLimbSmoothing ,Object Number, Limb Number, Percentage,basic3d\SET LIMB SMOOTHING.htm
setLimbNormals ,Object Number, Limb Number,basic3d\SET LIMB NORMALS.htm
loadMesh ,Filename, Mesh Number,basic3d\LOAD MESH.htm
saveMesh ,Filename, Mesh Number,basic3d\SAVE MESH.htm
deleteMesh ,Mesh Number,basic3d\DELETE MESH.htm
changeMesh ,Object Number, Limb Number, Mesh Number,basic3d\CHANGE MESH.htm
makeMeshFromObject ,Mesh Number, Object Number,basic3d\MAKE MESH FROM OBJECT.htm
createVertexShaderFromFile ,VertexShader Number, Shader Filename,basic3d\CREATE VERTEX SHADER FROM FILE.htm
deleteVertexShader ,VertexShader Number,basic3d\DELETE VERTEX SHADER.htm
setVertexShaderOn ,Object Number, VertexShader Number,basic3d\SET VERTEX SHADER ON.htm
setVertexShaderOff ,Object Number,basic3d\SET VERTEX SHADER OFF.htm
setVertexShaderVector ,VertexShader Number, Constant, Vector4, ConstantCount,basic3d\SET VERTEX SHADER VECTOR.htm
setVertexShaderMatrix ,VertexShader Number, Constant, Matrix4, ConstantCount,basic3d\SET VERTEX SHADER MATRIX.htm
setVertexShaderStream ,VertexShader Number, Position, Data, Datatype,basic3d\SET VERTEX SHADER STREAM.htm
setVertexShaderStreamcount ,VertexShader Number, Count,basic3d\SET VERTEX SHADER STREAMCOUNT.htm
convertObjectFvf ,Object Number, FVF Format,basic3d\CONVERT OBJECT FVF.htm
createPixelShaderFromFile ,PixelShader Number, Shader Filename,basic3d\CREATE PIXEL SHADER FROM FILE.htm
deletePixelShader ,PixelShader Number,basic3d\DELETE PIXEL SHADER.htm
setPixelShaderOn ,Object Number, PixelShader Number,basic3d\SET PIXEL SHADER ON.htm
setPixelShaderOff ,Object Number,basic3d\SET PIXEL SHADER OFF.htm
setPixelShaderTexture ,PixelShader Number, Slot Number, Image Number,basic3d\SET PIXEL SHADER TEXTURE.htm
flushVideoMemory,,basic3d\FLUSH VIDEO MEMORY.htm
compileCsg ,Input X File, Output X File,basic3d\COMPILE CSG.htm
lockVertexdataForLimb ,Object Number, Limb Number,basic3d\LOCK VERTEXDATA FOR LIMB.htm
lockVertexdataForLimb ,Object Number, Limb Number,basic3d\LOCK VERTEXDATA FOR LIMB.htm
lockVertexdataForMesh ,Mesh Number,basic3d\LOCK VERTEXDATA FOR MESH.htm
addMeshToVertexdata ,Mesh Number,basic3d\ADD MESH TO VERTEXDATA.htm
deleteMeshFromVertexdata ,Vertex Start, Vertex End, Index Start, Index End,basic3d\DELETE MESH FROM VERTEXDATA.htm
convertMeshToVertexdata ,Mesh Number,basic3d\CONVERT MESH TO VERTEXDATA.htm
unlockVertexdata,,basic3d\UNLOCK VERTEXDATA.htm
setIndexdata ,Indice Index, Vertex Index,basic3d\SET INDEXDATA.htm
setVertexdataUv ,Vertex Index, U, V,basic3d\SET VERTEXDATA UV.htm
setVertexdataNormals ,Vertex Index, NX, NY, NZ,basic3d\SET VERTEXDATA NORMALS.htm
setVertexdataPosition ,Vertex Index, X, Y, Z,basic3d\SET VERTEXDATA POSITION.htm
setVertexdataDiffuse ,RGB Value,basic3d\SET VERTEXDATA DIFFUSE.htm
getVertexdataIndexCount(,Return Integer=(),basic3d\GET VERTEXDATA INDEX COUNT.htm
getIndexdata(,Return Integer=(Indice Index),basic3d\GET INDEXDATA.htm
getVertexdataVertexCount(,Return Integer=(Vertex Index),basic3d\GET VERTEXDATA VERTEX COUNT.htm
getVertexdataPositionX(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA POSITION X.htm
getVertexdataPositionY(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA POSITION Y.htm
getVertexdataPositionZ(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA POSITION Z.htm
getVertexdataNormalsX(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA NORMALS X.htm
getVertexdataNormalsY(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA NORMALS Y.htm
getVertexdataNormalsZ(,Return Float=(Vertex Index),basic3d\GET VERTEXDATA NORMALS Z.htm
getVertexdataU ,return Float=(Vertex Index),basic3d\GET VERTEXDATA U.htm
getVertexdataV ,return Float=(Vertex Index),basic3d\GET VERTEXDATA V.htm
getVertexdataDiffuse(,Return DWORD=(Vertex Index),basic3d\GET VERTEXDATA DIFFUSE.htm
objectExist(,Return Integer=(Object Number),basic3d\OBJECT EXIST.htm
objectVisible(,Return Integer=(Object Number),basic3d\OBJECT VISIBLE.htm
objectPlaying(,Return Integer=(Object Number),basic3d\OBJECT PLAYING.htm
objectLooping(,Return Integer=(Object Number),basic3d\OBJECT LOOPING.htm
objectPositionX(,Return Float=(Object Number),basic3d\OBJECT POSITION X.htm
objectPositionY(,Return Float=(Object Number),basic3d\OBJECT POSITION Y.htm
objectPositionZ(,Return Float=(Object Number),basic3d\OBJECT POSITION Z.htm
objectSize(,Return Float=(Object Number),basic3d\OBJECT SIZE.htm
objectSizeX(,Return Float=(Object Number),basic3d\OBJECT SIZE X.htm
objectSizeY(,Return Float=(Object Number),basic3d\OBJECT SIZE Y.htm
objectSizeZ(,Return Float=(Object Number),basic3d\OBJECT SIZE Z.htm
objectAngleX(,Return Float=(Object Number),basic3d\OBJECT ANGLE X.htm
objectAngleY(,Return Float=(Object Number),basic3d\OBJECT ANGLE Y.htm
objectAngleZ(,Return Float=(Object Number),basic3d\OBJECT ANGLE Z.htm
objectFrame(,Return Integer=(Object Number),basic3d\OBJECT FRAME.htm
objectSpeed(,Return Integer=(Object Number),basic3d\OBJECT SPEED.htm
objectInterpolation(,Return Integer=(Object Number),basic3d\OBJECT INTERPOLATION.htm
totalObjectFrames(,Return Integer=(Object Number),basic3d\TOTAL OBJECT FRAMES.htm
objectHit(,Return Integer=(ObjectA Number, ObjectB Number),basic3d\OBJECT HIT.htm
objectCollision(,Return Integer=(ObjectA Number, ObjectB Number),basic3d\OBJECT COLLISION.htm
getObjectCollisionX(,Return Float=(),basic3d\GET OBJECT COLLISION X.htm
getObjectCollisionY(,Return Float=(),basic3d\GET OBJECT COLLISION Y.htm
getObjectCollisionZ(,Return Float=(),basic3d\GET OBJECT COLLISION Z.htm
objectCollisionRadius(,Return Float=(Object Number),basic3d\OBJECT COLLISION RADIUS.htm
objectCollisionCenterX(,Return Float=(Object Number),basic3d\OBJECT COLLISION CENTER X.htm
objectCollisionCenterY(,Return Float=(Object Number),basic3d\OBJECT COLLISION CENTER Y.htm
objectCollisionCenterZ(,Return Float=(Object Number),basic3d\OBJECT COLLISION CENTER Z.htm
intersectObject(,Return Float=(Object Number, X, Y, Z, ToX, ToY, ToZ),basic3d\INTERSECT OBJECT.htm
limbExist(,Return Integer=(Object Number, Limb Number),basic3d\LIMB EXIST.htm
limbName$(,Return String=LIMB NAME$(Object Number, Limb Number),basic3d\LIMB NAME$.htm
limbVisible(,Return Integer=(Object Number, Limb Number),basic3d\LIMB VISIBLE.htm
limbOffsetX(,Return Float=(Object Number, Limb Number),basic3d\LIMB OFFSET X.htm
limbOffsetY(,Return Float=(Object Number, Limb Number),basic3d\LIMB OFFSET Y.htm
limbOffsetZ(,Return Float=(Object Number, Limb Number),basic3d\LIMB OFFSET Z.htm
limbScaleX(,Return Float=(Object Number, Limb Number),basic3d\LIMB SCALE X.htm
limbScaleY(,Return Float=(Object Number, Limb Number),basic3d\LIMB SCALE Y.htm
limbScaleZ(,Return Float=(Object Number, Limb Number),basic3d\LIMB SCALE Z.htm
limbAngleX(,Return Float=(Object Number, Limb Number),basic3d\LIMB ANGLE X.htm
limbAngleY(,Return Float=(Object Number, Limb Number),basic3d\LIMB ANGLE Y.htm
limbAngleZ(,Return Float=(Object Number, Limb Number),basic3d\LIMB ANGLE Z.htm
limbTexture(,Return Integer=(Object Number, Limb Number),basic3d\LIMB TEXTURE.htm
limbTextureName(,Return String=(Object Number, Limb Number),basic3d\LIMB TEXTURE NAME.htm
limbDirectionX(,Return Float=(Object Number, Limb Number),basic3d\LIMB DIRECTION X.htm
limbDirectionY(,Return Float=(Object Number, Limb Number),basic3d\LIMB DIRECTION Y.htm
limbDirectionZ(,Return Float=(Object Number, Limb Number),basic3d\LIMB DIRECTION Z.htm
limbPositionX(,Return Float=(Object Number, Limb Number),basic3d\LIMB POSITION X.htm
limbPositionY(,Return Float=(Object Number, Limb Number),basic3d\LIMB POSITION Y.htm
limbPositionZ(,Return Float=(Object Number, Limb Number),basic3d\LIMB POSITION Z.htm
checkLimbLink(,Return Integer=(Object Number, Limb Number),basic3d\CHECK LIMB LINK.htm
objectInScreen(,Return Integer=(Object Number),basic3d\OBJECT IN SCREEN.htm
objectScreenX(,Return Integer=(Object Number),basic3d\OBJECT SCREEN X.htm
objectScreenY(,Return Integer=(Object Number),basic3d\OBJECT SCREEN Y.htm
pickObject(,Return Integer=(Screen X, Screen Y, Object Start, Object End),basic3d\PICK OBJECT.htm
pickScreen ,Screen X, Screen Y, Distance,basic3d\PICK SCREEN.htm
getPickDistance(,Return Float=(),basic3d\GET PICK DISTANCE.htm
getPickVectorX(,Return Float=(),basic3d\GET PICK VECTOR X.htm
getPickVectorY(,Return Float=(),basic3d\GET PICK VECTOR Y.htm
getPickVectorZ(,Return Float=(),basic3d\GET PICK VECTOR Z.htm
alphablendingAvailable(,Return Integer=(),basic3d\ALPHABLENDING AVAILABLE.htm
alphaAvailable(,Return Integer=(),basic3d\ALPHA AVAILABLE.htm
alphacomparisonAvailable(,Return Integer=(),basic3d\ALPHACOMPARISON AVAILABLE.htm
anistropicfilteringAvailable(,Return Integer=(),basic3d\ANISTROPICFILTERING AVAILABLE.htm
antialiasAvailable(,Return Integer=(),basic3d\ANTIALIAS AVAILABLE.htm
blitsystolocalAvailable(,Return Integer=(),basic3d\BLITSYSTOLOCAL AVAILABLE.htm
calibrategammaAvailable(,Return Integer=(),basic3d\CALIBRATEGAMMA AVAILABLE.htm
clipandscalepointsAvailable(,Return Integer=(),basic3d\CLIPANDSCALEPOINTS AVAILABLE.htm
cliptlvertsAvailable(,Return Integer=(),basic3d\CLIPTLVERTS AVAILABLE.htm
colorperspectiveAvailable(,Return Integer=(),basic3d\COLORPERSPECTIVE AVAILABLE.htm
colorwriteenableAvailable(,Return Integer=(),basic3d\COLORWRITEENABLE AVAILABLE.htm
cubemapAvailable(,Return Integer=(),basic3d\CUBEMAP AVAILABLE.htm
cullccwAvailable(,Return Integer=(),basic3d\CULLCCW AVAILABLE.htm
cullcwAvailable(,Return Integer=(),basic3d\CULLCW AVAILABLE.htm
getDeviceType(,Return Integer=(),basic3d\GET DEVICE TYPE.htm
ditherAvailable(,Return Integer=(),basic3d\DITHER AVAILABLE.htm
filteringAvailable(,Return Integer=(),basic3d\FILTERING AVAILABLE.htm
fograngeAvailable(,Return Integer=(),basic3d\FOGRANGE AVAILABLE.htm
fogtableAvailable(,Return Integer=(),basic3d\FOGTABLE AVAILABLE.htm
fogvertexAvailable(,Return Integer=(),basic3d\FOGVERTEX AVAILABLE.htm
fogAvailable(,Return Integer=(),basic3d\FOG AVAILABLE.htm
fullscreengammaAvailable(,Return Integer=(),basic3d\FULLSCREENGAMMA AVAILABLE.htm
getMaximumLights(,Return Integer=(),basic3d\GET MAXIMUM LIGHTS.htm
getMaximumPixelShaderValue(,Return Integer=(),basic3d\GET MAXIMUM PIXEL SHADER VALUE.htm
getMaximumTextureHeight(,Return Integer=(),basic3d\GET MAXIMUM TEXTURE HEIGHT.htm
getMaximumTextureWidth(,Return Integer=(),basic3d\GET MAXIMUM TEXTURE WIDTH.htm
getMaximumVertexShaderConstants(,Return Integer=(),basic3d\GET MAXIMUM VERTEX SHADER CONSTANTS.htm
getMaximumVolumeExtent(,Return Integer=(),basic3d\GET MAXIMUM VOLUME EXTENT.htm
mipcubemapAvailable(,Return Integer=(),basic3d\MIPCUBEMAP AVAILABLE.htm
mipmapAvailable(,Return Integer=(),basic3d\MIPMAP AVAILABLE.htm
mipmaplodbiasAvailable(,Return Integer=(),basic3d\MIPMAPLODBIAS AVAILABLE.htm
mipmapvolumeAvailable(,Return Integer=(),basic3d\MIPMAPVOLUME AVAILABLE.htm
nonpowtexturesAvailable(,Return Integer=(),basic3d\NONPOWTEXTURES AVAILABLE.htm
perspectivetexturesAvailable(,Return Integer=(),basic3d\PERSPECTIVETEXTURES AVAILABLE.htm
getMaximumPixelShaderVersion(,Return Float=(),basic3d\GET MAXIMUM PIXEL SHADER VERSION.htm
projectedtexturesAvailable(,Return Integer=(),basic3d\PROJECTEDTEXTURES AVAILABLE.htm
renderafterflipAvailable(,Return Integer=(),basic3d\RENDERAFTERFLIP AVAILABLE.htm
renderwindowedAvailable(,Return Integer=(),basic3d\RENDERWINDOWED AVAILABLE.htm
seperatetexturememoriesAvailable(,Return Integer=(),basic3d\SEPERATETEXTUREMEMORIES AVAILABLE.htm
onlysquaretexturesAvailable(,Return Integer=(),basic3d\ONLYSQUARETEXTURES AVAILABLE.htm
tnlAvailable(,Return Integer=(),basic3d\TNL AVAILABLE.htm
tlvertexsystemmemoryAvailable(,Return Integer=(),basic3d\TLVERTEXSYSTEMMEMORY AVAILABLE.htm
tlvertexvideomemoryAvailable(,Return Integer=(),basic3d\TLVERTEXVIDEOMEMORY AVAILABLE.htm
nonlocalvideomemoryAvailable(,Return Integer=(),basic3d\NONLOCALVIDEOMEMORY AVAILABLE.htm
texturesystemmemoryAvailable(,Return Integer=(),basic3d\TEXTURESYSTEMMEMORY AVAILABLE.htm
texturevideomemoryAvailable(,Return Integer=(),basic3d\TEXTUREVIDEOMEMORY AVAILABLE.htm
getMaximumVertexShaderVersion(,Return Float=(),basic3d\GET MAXIMUM VERTEX SHADER VERSION.htm
volumemapAvailable(,Return Integer=(),basic3d\VOLUMEMAP AVAILABLE.htm
wbufferAvailable(,Return Integer=(),basic3d\WBUFFER AVAILABLE.htm
wfogAvailable(,Return Integer=(),basic3d\WFOG AVAILABLE.htm
zbufferAvailable(,Return Integer=(),basic3d\ZBUFFER AVAILABLE.htm
zfogAvailable(,Return Integer=(),basic3d\ZFOG AVAILABLE.htm
meshExist(,Return Integer=(Mesh Number),basic3d\MESH EXIST.htm
effectExist(,Return Integer=(Effect Number),basic3d\EFFECT EXIST.htm
vertexShaderExist(,Return Integer=(VertexShader Number),basic3d\VERTEX SHADER EXIST.htm
pixelShaderExist(,Return Integer=(PixelShader Number),basic3d\PIXEL SHADER EXIST.htm
statistic(,Return Integer=(Statistic Code),basic3d\STATISTIC.htm
loadBitmap ,Filename,Bitmap Number,bitmap\LOAD BITMAP.htm
createBitmap ,Bitmap Number,Width,Height,bitmap\CREATE BITMAP.htm
deleteBitmap ,Bitmap Number,bitmap\DELETE BITMAP.htm
copyBitmap ,From Bitmap,To Bitmap,bitmap\COPY BITMAP.htm
flipBitmap ,Bitmap Number,bitmap\FLIP BITMAP.htm
mirrorBitmap ,Bitmap Number,bitmap\MIRROR BITMAP.htm
fadeBitmap ,Bitmap Number,Fade Value,bitmap\FADE BITMAP.htm
blurBitmap ,Bitmap Number,Blur Value,bitmap\BLUR BITMAP.htm
setCurrentBitmap ,Bitmap Number,bitmap\SET CURRENT BITMAP.htm
setBitmapFormat ,Bitmap Format Number,bitmap\SET BITMAP FORMAT.htm
currentBitmap(,Return Integer=(),bitmap\CURRENT BITMAP.htm
bitmapExist(,Return Integer=(Bitmap Number),bitmap\BITMAP EXIST.htm
bitmapWidth(,Return Integer=(Bitmap Number),bitmap\BITMAP WIDTH.htm
bitmapHeight(,Return Integer=(Bitmap Number),bitmap\BITMAP HEIGHT.htm
bitmapDepth(,Return Integer=(Bitmap Number),bitmap\BITMAP DEPTH.htm
bitmapMirrored(,Return Integer=(Bitmap Number),bitmap\BITMAP MIRRORED.htm
bitmapFlipped(,Return Integer=(Bitmap Number),bitmap\BITMAP FLIPPED.htm
makeCamera ,Camera Number,camera\MAKE CAMERA.htm
deleteCamera ,Camera Number,camera\DELETE CAMERA.htm
moveCamera ,Distance Value,camera\MOVE CAMERA.htm
positionCamera ,X, Y, Z,camera\POSITION CAMERA.htm
pointCamera ,X, Y, Z,camera\POINT CAMERA.htm
rotateCamera ,XAngle, YAngle, ZAngle,camera\ROTATE CAMERA.htm
xrotateCamera ,XAngle,camera\XROTATE CAMERA.htm
yrotateCamera ,YAngle,camera\YROTATE CAMERA.htm
zrotateCamera ,ZAngle,camera\ZROTATE CAMERA.htm
turnCameraLeft ,Angle Value,camera\TURN CAMERA LEFT.htm
turnCameraRight ,Angle Value,camera\TURN CAMERA RIGHT.htm
pitchCameraUp ,Angle Value,camera\PITCH CAMERA UP.htm
pitchCameraDown ,Angle Value,camera\PITCH CAMERA DOWN.htm
rollCameraLeft ,Angle Value,camera\ROLL CAMERA LEFT.htm
rollCameraRight ,Angle Value,camera\ROLL CAMERA RIGHT.htm
setCurrentCamera ,Camera Number,camera\SET CURRENT CAMERA.htm
clearCameraView ,Color Value,camera\CLEAR CAMERA VIEW.htm
setCameraFov ,Field-Of-View Angle,camera\SET CAMERA FOV.htm
setCameraRange ,Near Value, Far Value,camera\SET CAMERA RANGE.htm
setCameraView ,Left, Top, Right, Bottom,camera\SET CAMERA VIEW.htm
setCameraAspect ,Aspect Ratio,camera\SET CAMERA ASPECT.htm
setCameraRotationXyz,,camera\SET CAMERA ROTATION XYZ.htm
setCameraRotationZyx,,camera\SET CAMERA ROTATION ZYX.htm
setCameraToFollow ,X, Y, Z, Angle, Distance, Height, Smooth, Collision,camera\SET CAMERA TO FOLLOW.htm
setCameraToImage ,Camera Number, Image Number, Width, Height,camera\SET CAMERA TO IMAGE.htm
setCameraToObjectOrientation ,Object Number,camera\SET CAMERA TO OBJECT ORIENTATION.htm
setVector3ToCameraPosition ,Vector, Camera Number,camera\SET VECTOR3 TO CAMERA POSITION.htm
setVector3ToCameraRotation ,Vector, Camera Number,camera\SET VECTOR3 TO CAMERA ROTATION.htm
controlCameraUsingArrowkeys ,Camera Number, MoveSpeed, TurnSpeed,camera\CONTROL CAMERA USING ARROWKEYS.htm
autocamOn,,camera\AUTOCAM ON.htm
autocamOff,,camera\AUTOCAM OFF.htm
backdropOn,,camera\BACKDROP ON.htm
backdropOff,,camera\BACKDROP OFF.htm
colorBackdrop ,Color Value,camera\COLOR BACKDROP.htm
textureBackdrop ,Image Number,camera\TEXTURE BACKDROP.htm
scrollBackdrop ,U, V,camera\SCROLL BACKDROP.htm
cameraExist(,Return Integer=(Camera Number),camera\CAMERA EXIST.htm
cameraPositionX(,Return Float=(),camera\CAMERA POSITION X.htm
cameraPositionY(,Return Float=(),camera\CAMERA POSITION Y.htm
cameraPositionZ(,Return Float=(),camera\CAMERA POSITION Z.htm
cameraAngleX(,Return Float=(),camera\CAMERA ANGLE X.htm
cameraAngleY(,Return Float=(),camera\CAMERA ANGLE Y.htm
cameraAngleZ(,Return Float=(),camera\CAMERA ANGLE Z.htm
_include ,#INCLUDE,core\_INCLUDE.htm
rem,,core\REM.htm
remstart,,core\REMSTART.htm
remend,,core\REMEND.htm
syncOn,,core\SYNC ON.htm
syncOff,,core\SYNC OFF.htm
syncRate ,Rate,core\SYNC RATE.htm
syncSleep ,Slep Flag,core\SYNC SLEEP.htm
syncMask ,DWORD Mask Value,core\SYNC MASK.htm
sync,,core\SYNC.htm
fastsync,,core\FASTSYNC.htm
cls,,core\CLS.htm
setCursor ,X,Y,core\SET CURSOR.htm
print ,Print Statements,core\PRINT.htm
input ,Print Statements, Input Variable,core\INPUT.htm
dim,,core\DIM.htm
undim,,core\UNDIM.htm
do,,core\DO.htm
exit,,core\EXIT.htm
loop,,core\LOOP.htm
end,,core\END.htm
if,,core\IF.htm
else,,core\ELSE.htm
endif,,core\ENDIF.htm
repeat,,core\REPEAT.htm
until,,core\UNTIL.htm
while,,core\WHILE.htm
endwhile,,core\ENDWHILE.htm
for,,core\FOR.htm
step,,core\STEP.htm
next,,core\NEXT.htm
goto,,core\GOTO.htm
gosub,,core\GOSUB.htm
return,,core\RETURN.htm
select,,core\SELECT.htm
case,,core\CASE.htm
caseDefault,,core\CASE DEFAULT.htm
endcase,,core\ENDCASE.htm
endselect,,core\ENDSELECT.htm
function,,core\FUNCTION.htm
exitfunction,,core\EXITFUNCTION.htm
endfunction,,core\ENDFUNCTION.htm
restore ,String,core\RESTORE.htm
read ,Varable,core\READ.htm
data,,core\DATA.htm
saveArray ,Filename, Array Name(0),core\SAVE ARRAY.htm
loadArray ,Filename, Array Name(0),core\LOAD ARRAY.htm
wait ,Integer Value,core\WAIT.htm
sleep ,Number,core\SLEEP.htm
waitKey,,core\WAIT KEY.htm
waitMouse,,core\WAIT MOUSE.htm
suspendForKey,,core\SUSPEND FOR KEY.htm
suspendForMouse,,core\SUSPEND FOR MOUSE.htm
break,,core\BREAK.htm
drawToBack,,core\DRAW TO BACK.htm
drawToFront,,core\DRAW TO FRONT.htm
drawSpritesFirst,,core\DRAW SPRITES FIRST.htm
drawSpritesLast,,core\DRAW SPRITES LAST.htm
rand(
randomize ,Seed Value,core\RANDOMIZE.htm
inc ,Integer Value,core\INC.htm
dec ,Integer Value,core\DEC.htm
makeMemory(,Return DWORD=(Size In Bytes),core\MAKE MEMORY.htm
deleteMemory ,Memory Address,core\DELETE MEMORY.htm
fillMemory ,Memory Address, FillByte, Size In Bytes,core\FILL MEMORY.htm
copyMemory ,Memory Destination, Memory Source, Size In Bytes,core\COPY MEMORY.htm
emptyArray ,Array Name(0),core\EMPTY ARRAY.htm
arrayInsertAtTop ,Array Name(0),core\ARRAY INSERT AT TOP.htm
arrayInsertAtBottom ,Array Name(0),core\ARRAY INSERT AT BOTTOM.htm
arrayInsertAtElement ,Array Name(0), Index,core\ARRAY INSERT AT ELEMENT.htm
arrayDeleteElement ,Array Name(0),core\ARRAY DELETE ELEMENT.htm
nextArrayIndex ,Array Name(0),core\NEXT ARRAY INDEX.htm
previousArrayIndex ,Array Name(0),core\PREVIOUS ARRAY INDEX.htm
arrayIndexToTop ,Array Name(0),core\ARRAY INDEX TO TOP.htm
arrayIndexToBottom ,Array Name(0),core\ARRAY INDEX TO BOTTOM.htm
arrayIndexToQueue ,Array Name(0),core\ARRAY INDEX TO QUEUE.htm
addToQueue ,Array Name(0),core\ADD TO QUEUE.htm
removeFromQueue ,Array Name(0),core\REMOVE FROM QUEUE.htm
arrayIndexToStack ,Array Name(0),core\ARRAY INDEX TO STACK.htm
addToStack ,Array Name(0),core\ADD TO STACK.htm
removeFromStack ,Array Name(0),core\REMOVE FROM STACK.htm
cos(,Return Float=(Value),core\COS.htm
sin(,Return Float=(Value),core\SIN.htm
tan(,Return Float=(Value),core\TAN.htm
acos(,Return Float=(Value),core\ACOS.htm
asin(,Return Float=(Value),core\ASIN.htm
atan(,Return Float=(Value),core\ATAN.htm
atanfull(,Return Float=(Distance X, Distance Y),core\ATANFULL.htm
hcos(,Return Float=(Value),core\HCOS.htm
hsin(,Return Float=(Value),core\HSIN.htm
htan(,Return Float=(Value),core\HTAN.htm
sqrt(,Return Float=(Value),core\SQRT.htm
abs(,Return Float=(Value),core\ABS.htm
int(,Return Integer=(Value),core\INT.htm
exp(,Return Float=(Value),core\EXP.htm
rnd(,Return Float=(Range Value),core\RND.htm
timer(,Return Integer=(),core\TIMER.htm
inkey$(,Return String=INKEY$(),core\INKEY$.htm
cl$(,Return String=CL$(),core\CL$.htm
getDate$(,Return String=GET DATE$(),core\GET DATE$.htm
getTime$(,Return String=GET TIME$(),core\GET TIME$.htm
floor(,Return Float=(Value),core\FLOOR.htm
ceil(,Return Float=(Value),core\CEIL.htm
curvevalue(,Return Float=(Destination Value, Current Value, Speed Value),core\CURVEVALUE.htm
wrapvalue(,Return Float=(Angle Value),core\WRAPVALUE.htm
newxvalue(,Return Float=(Current X Value, Angle Value, Step Value),core\NEWXVALUE.htm
newyvalue(,Return Float=(Current Y Value, Angle Value, Step Value),core\NEWYVALUE.htm
newzvalue(,Return Float=(Current Z Value, Angle Value, Step Value),core\NEWZVALUE.htm
curveangle(,Return Float=(Destination Value, Current Value, Speed Value),core\CURVEANGLE.htm
arrayCount(,Return Integer=(Array Name(0)),core\ARRAY COUNT.htm
arrayIndexValid(,Return Integer=(Array Name(0)),core\ARRAY INDEX VALID.htm
performChecklistForGraphicsCards,,display\PERFORM CHECKLIST FOR GRAPHICS CARDS.htm
performChecklistForDisplayModes,,display\PERFORM CHECKLIST FOR DISPLAY MODES.htm
setDisplayMode ,Width, Height, Depth,display\SET DISPLAY MODE.htm
setGraphicsCard ,Cardname,display\SET GRAPHICS CARD.htm
setGamma ,Red, Green, Blue,display\SET GAMMA.htm
showWindow,,display\SHOW WINDOW.htm
hideWindow,,display\HIDE WINDOW.htm
maximizeWindow,,display\MAXIMIZE WINDOW.htm
minimizeWindow,,display\MINIMIZE WINDOW.htm
restoreWindow,,display\RESTORE WINDOW.htm
setWindowOn,,display\SET WINDOW ON.htm
setWindowOff,,display\SET WINDOW OFF.htm
setWindowSize ,Width, Height,display\SET WINDOW SIZE.htm
setWindowTitle ,Caption String,display\SET WINDOW TITLE.htm
setWindowLayout ,Style, Caption, Icon Number,display\SET WINDOW LAYOUT.htm
setWindowPosition ,X, Y,display\SET WINDOW POSITION.htm
lockBackbuffer,,display\LOCK BACKBUFFER.htm
unlockBackbuffer,,display\UNLOCK BACKBUFFER.htm
screenType(,Return Integer=(),display\SCREEN TYPE.htm
screenWidth(,Return Integer=(),display\SCREEN WIDTH.htm
screenHeight(,Return Integer=(),display\SCREEN HEIGHT.htm
screenDepth(,Return Integer=(),display\SCREEN DEPTH.htm
screenInvalid(,Return Integer=(),display\SCREEN INVALID.htm
screenFps(,Return Integer=(),display\SCREEN FPS.htm
currentGraphicsCard$(,Return String=CURRENT GRAPHICS CARD$(),display\CURRENT GRAPHICS CARD$.htm
checkDisplayMode(,Return Integer=(Width, Height, Depth),display\CHECK DISPLAY MODE.htm
getBackbufferPtr(,Return Integer=(),display\GET BACKBUFFER PTR.htm
getBackbufferWidth(,Return Integer=(),display\GET BACKBUFFER WIDTH.htm
getBackbufferHeight(,Return Integer=(),display\GET BACKBUFFER HEIGHT.htm
getBackbufferDepth(,Return Integer=(),display\GET BACKBUFFER DEPTH.htm
getBackbufferPitch(,Return Integer=(),display\GET BACKBUFFER PITCH.htm
dir,,file\DIR.htm
drivelist,,file\DRIVELIST.htm
setDir ,Path$,file\SET DIR.htm
makeFile ,Filename,file\MAKE FILE.htm
makeDirectory ,Directory Name,file\MAKE DIRECTORY.htm
deleteFile ,Filename,file\DELETE FILE.htm
deleteDirectory ,Directory Name,file\DELETE DIRECTORY.htm
copyFile ,Source Filename, Destination Filename,file\COPY FILE.htm
moveFile ,Source Filename, Destination Filename,file\MOVE FILE.htm
renameFile ,Source Filename, New Filename,file\RENAME FILE.htm
executeFile ,Filename, Commandline, Directory,file\EXECUTE FILE.htm
findFirst,,file\FIND FIRST.htm
findNext,,file\FIND NEXT.htm
cd ,Path$,file\CD.htm
openToRead ,File Number, Filename,file\OPEN TO READ.htm
openToWrite ,File Number, Filename,file\OPEN TO WRITE.htm
closeFile ,File Number,file\CLOSE FILE.htm
readByte ,File Number, Variable,file\READ BYTE.htm
readFile ,File Number, Variable,file\READ FILE.htm
readDirblock ,File Number, Folder to Read,file\READ DIRBLOCK.htm
readFileblock ,File Number, Filename to Read,file\READ FILEBLOCK.htm
readFloat ,File Number, Variable,file\READ FLOAT.htm
readLong ,File Number, Variable,file\READ LONG.htm
readMemblock ,File Number, Memblock Number,file\READ MEMBLOCK.htm
readString ,File Number, Variable String,file\READ STRING.htm
readWord ,File Number, Variable,file\READ WORD.htm
writeWord ,File Number, Variable,file\WRITE WORD.htm
writeByte ,File Number, Variable,file\WRITE BYTE.htm
writeLong ,File Number, Variable,file\WRITE LONG.htm
writeDirblock ,File Number, Folder to Create,file\WRITE DIRBLOCK.htm
writeFileblock ,File Number, Filename to Create,file\WRITE FILEBLOCK.htm
writeFloat ,File Number, Variable,file\WRITE FLOAT.htm
writeFile ,File Number, Variable,file\WRITE FILE.htm
writeMemblock ,File Number, Memblock Number,file\WRITE MEMBLOCK.htm
writeString ,File Number, String,file\WRITE STRING.htm
skipBytes ,File Number, Bytes To Skip,file\SKIP BYTES.htm
writeByteToFile ,Filename, Position, ByteValue,file\WRITE BYTE TO FILE.htm
readByteFromFile(,Return Integer=(Filename, Position),file\READ BYTE FROM FILE.htm
performChecklistForDrives,,file\PERFORM CHECKLIST FOR DRIVES.htm
performChecklistForFiles,,file\PERFORM CHECKLIST FOR FILES.htm
makeMemblockFromFile ,Memblock Number, File Number,file\MAKE MEMBLOCK FROM FILE.htm
makeFileFromMemblock ,File Number, Memblock Number,file\MAKE FILE FROM MEMBLOCK.htm
fileExist(,Return Integer=(Filename),file\FILE EXIST.htm
pathExist(,Return Integer=(Path String),file\PATH EXIST.htm
getDir$(,Return String=GET DIR$(),file\GET DIR$.htm
appname$(,Return String=APPNAME$(),file\APPNAME$.htm
windir$(,Return String=WINDIR$(),file\WINDIR$.htm
fileEnd(,Return Integer=(File Number),file\FILE END.htm
fileOpen(,Return Integer=(File Number),file\FILE OPEN.htm
fileSize(,Return Integer=(Filename),file\FILE SIZE.htm
getFileDate$(,Return String=GET FILE DATE$(),file\GET FILE DATE$.htm
getFileName$(,Return String=GET FILE NAME$(),file\GET FILE NAME$.htm
getFileType(,Return Integer=(),file\GET FILE TYPE.htm
getFileCreation$(,Return String=GET FILE CREATION$(),file\GET FILE CREATION$.htm
ftpConnect ,Url String, User String, Password String,ftp\FTP CONNECT.htm
ftpDisconnect,,ftp\FTP DISCONNECT.htm
ftpTerminate,,ftp\FTP TERMINATE.htm
ftpSetDir ,Directory String,ftp\FTP SET DIR.htm
ftpGetFile ,Ftp Filename String,ftp\FTP GET FILE.htm
ftpPutFile ,Local Filename String,ftp\FTP PUT FILE.htm
ftpDeleteFile ,Ftp Filename String,ftp\FTP DELETE FILE.htm
ftpProceed,,ftp\FTP PROCEED.htm
ftpFindFirst,,ftp\FTP FIND FIRST.htm
ftpFindNext,,ftp\FTP FIND NEXT.htm
getFtpStatus(,Return Integer=(),ftp\GET FTP STATUS.htm
getFtpDir$(,Return String=GET FTP DIR$(),ftp\GET FTP DIR$.htm
getFtpProgress(,Return Integer=(),ftp\GET FTP PROGRESS.htm
getFtpFailure(,Return Integer=(),ftp\GET FTP FAILURE.htm
getFtpError$(,Return String=GET FTP ERROR$(),ftp\GET FTP ERROR$.htm
getFtpFileType(,Return Integer=(),ftp\GET FTP FILE TYPE.htm
getFtpFileName$(,Return String=GET FTP FILE NAME$(),ftp\GET FTP FILE NAME$.htm
getFtpFileSize(,Return Integer=(),ftp\GET FTP FILE SIZE.htm
loadImage ,Filename, Image Number,image\LOAD IMAGE.htm
saveImage ,Filename, Image Number,image\SAVE IMAGE.htm
deleteImage ,Image Number,image\DELETE IMAGE.htm
getImage ,Image Number, Left, Top, Right, Bottom,image\GET IMAGE.htm
pasteImage ,Image Number, X, Y,image\PASTE IMAGE.htm
setImageColorkey ,Red Value, Green Value, Blue Value,image\SET IMAGE COLORKEY.htm
imageExist(,Return Integer=(Image Number),image\IMAGE EXIST.htm
showMouse,,input\SHOW MOUSE.htm
hideMouse,,input\HIDE MOUSE.htm
positionMouse ,X,Y,input\POSITION MOUSE.htm
changeMouse ,Cursor Number,input\CHANGE MOUSE.htm
clearEntryBuffer,,input\CLEAR ENTRY BUFFER.htm
writeToClipboard ,String,input\WRITE TO CLIPBOARD.htm
writeToRegistry ,Folder Name, Key Name, Value,input\WRITE TO REGISTRY.htm
writeStringToRegistry ,Folder Name, Key Name, String,input\WRITE STRING TO REGISTRY.htm
performChecklistForControlDevices,,input\PERFORM CHECKLIST FOR CONTROL DEVICES.htm
setControlDevice ,Device Name$,input\SET CONTROL DEVICE.htm
forceUp ,Magnitude Value,input\FORCE UP.htm
forceDown ,Magnitude Value,input\FORCE DOWN.htm
forceLeft ,Magnitude Value,input\FORCE LEFT.htm
forceRight ,Magnitude Value,input\FORCE RIGHT.htm
forceAngle ,Magnitude Value, Angle Value, Delay Value,input\FORCE ANGLE.htm
forceNoEffect,,input\FORCE NO EFFECT.htm
forceWaterEffect ,Magnitude Value, Delay Value,input\FORCE WATER EFFECT.htm
forceShoot ,Magnitude Value, Delay Value,input\FORCE SHOOT.htm
forceChainsaw ,Magnitude Value, Delay Value,input\FORCE CHAINSAW.htm
forceImpact ,Magnitude Value, Delay Value,input\FORCE IMPACT.htm
forceAutoCenterOn,,input\FORCE AUTO CENTER ON.htm
forceAutoCenterOff,,input\FORCE AUTO CENTER OFF.htm
mouseclick(,Return Integer=(),input\MOUSECLICK.htm
mousemovex(,Return Integer=(),input\MOUSEMOVEX.htm
mousemovey(,Return Integer=(),input\MOUSEMOVEY.htm
mousemovez(,Return Integer=(),input\MOUSEMOVEZ.htm
mousex(,Return Integer=(),input\MOUSEX.htm
mousey(,Return Integer=(),input\MOUSEY.htm
mousez(,Return Integer=(),input\MOUSEZ.htm
upkey(,Return Integer=(),input\UPKEY.htm
downkey(,Return Integer=(),input\DOWNKEY.htm
leftkey(,Return Integer=(),input\LEFTKEY.htm
rightkey(,Return Integer=(),input\RIGHTKEY.htm
controlkey(,Return Integer=(),input\CONTROLKEY.htm
shiftkey(,Return Integer=(),input\SHIFTKEY.htm
returnkey(,Return Integer=(),input\RETURNKEY.htm
escapekey(,Return Integer=(),input\ESCAPEKEY.htm
spacekey(,Return Integer=(),input\SPACEKEY.htm
scancode(,Return Integer=(),input\SCANCODE.htm
keystate(,Return Integer=(Scancode),input\KEYSTATE.htm
entry$(,Return String=ENTRY$(),input\ENTRY$.htm
getClipboard$(,Return String=GET CLIPBOARD$(),input\GET CLIPBOARD$.htm
getRegistry(,Return Integer=(Folder Name, Key Name),input\GET REGISTRY.htm
getRegistry$(,Return String=GET REGISTRY$(Folder Name, Key Name),input\GET REGISTRY$.htm
joystickUp(,Return Integer=(),input\JOYSTICK UP.htm
joystickDown(,Return Integer=(),input\JOYSTICK DOWN.htm
joystickLeft(,Return Integer=(),input\JOYSTICK LEFT.htm
joystickRight(,Return Integer=(),input\JOYSTICK RIGHT.htm
joystickX(,Return Integer=(),input\JOYSTICK X.htm
joystickY(,Return Integer=(),input\JOYSTICK Y.htm
joystickZ(,Return Integer=(),input\JOYSTICK Z.htm
joystickFireA(,Return Integer=(),input\JOYSTICK FIRE A.htm
joystickFireB(,Return Integer=(),input\JOYSTICK FIRE B.htm
joystickFireC(,Return Integer=(),input\JOYSTICK FIRE C.htm
joystickFireD(,Return Integer=(),input\JOYSTICK FIRE D.htm
joystickFireX(,Return Integer=(Button Number),input\JOYSTICK FIRE X.htm
joystickSliderA(,Return Integer=(),input\JOYSTICK SLIDER A.htm
joystickSliderB(,Return Integer=(),input\JOYSTICK SLIDER B.htm
joystickSliderC(,Return Integer=(),input\JOYSTICK SLIDER C.htm
joystickSliderD(,Return Integer=(),input\JOYSTICK SLIDER D.htm
joystickTwistX(,Return Integer=(),input\JOYSTICK TWIST X.htm
joystickTwistY(,Return Integer=(),input\JOYSTICK TWIST Y.htm
joystickTwistZ(,Return Integer=(),input\JOYSTICK TWIST Z.htm
joystickHatAngle(,Return Integer=(Hat Number),input\JOYSTICK HAT ANGLE.htm
controlDeviceName$(,Return String=CONTROL DEVICE NAME$(),input\CONTROL DEVICE NAME$.htm
controlDeviceX(,Return Integer=(),input\CONTROL DEVICE X.htm
controlDeviceY(,Return Integer=(),input\CONTROL DEVICE Y.htm
controlDeviceZ(,Return Integer=(),input\CONTROL DEVICE Z.htm
makeLight ,Light Number,light\MAKE LIGHT.htm
deleteLight ,Light Number,light\DELETE LIGHT.htm
showLight ,Light Number,light\SHOW LIGHT.htm
hideLight ,Light Number,light\HIDE LIGHT.htm
colorLight ,Light Number, Color Value,light\COLOR LIGHT.htm
positionLight ,Light Number, X, Y, Z,light\POSITION LIGHT.htm
rotateLight ,Light Number, XAngle, YAngle, ZAngle,light\ROTATE LIGHT.htm
pointLight ,Light Number, X, Y, Z,light\POINT LIGHT.htm
setDirectionalLight ,Light Number, NX, NY, NZ,light\SET DIRECTIONAL LIGHT.htm
setPointLight ,Light Number, X, Y, Z,light\SET POINT LIGHT.htm
setSpotLight ,Light Number, Inner Angle, Outer Angle,light\SET SPOT LIGHT.htm
setLightRange ,Light Number, Distance,light\SET LIGHT RANGE.htm
setLightToObjectPosition ,Light Number, Object Number,light\SET LIGHT TO OBJECT POSITION.htm
setLightToObjectOrientation ,Light Number, Object Number,light\SET LIGHT TO OBJECT ORIENTATION.htm
setVector3ToLightPosition ,Vector, Light Number,light\SET VECTOR3 TO LIGHT POSITION.htm
setVector3ToLightRotation ,Vector, Light Number,light\SET VECTOR3 TO LIGHT ROTATION.htm
setNormalizationOn,,light\SET NORMALIZATION ON.htm
setNormalizationOff,,light\SET NORMALIZATION OFF.htm
fogOn,,light\FOG ON.htm
fogOff,,light\FOG OFF.htm
fogColor ,Color Value,light\FOG COLOR.htm
fogDistance ,Distance,light\FOG DISTANCE.htm
setAmbientLight ,Percentage,light\SET AMBIENT LIGHT.htm
colorAmbientLight ,Color Value,light\COLOR AMBIENT LIGHT.htm
lightExist(,Return Integer=(Light Number),light\LIGHT EXIST.htm
lightType(,Return Integer=(Light Number),light\LIGHT TYPE.htm
lightVisible(,Return Integer=(Light Number),light\LIGHT VISIBLE.htm
lightRange(,Return Float=(Light Number),light\LIGHT RANGE.htm
lightPositionX(,Return Float=(Light Number),light\LIGHT POSITION X.htm
lightPositionY(,Return Float=(Light Number),light\LIGHT POSITION Y.htm
lightPositionZ(,Return Float=(Light Number),light\LIGHT POSITION Z.htm
lightDirectionX(,Return Float=(Light Number),light\LIGHT DIRECTION X.htm
lightDirectionY(,Return Float=(Light Number),light\LIGHT DIRECTION Y.htm
lightDirectionZ(,Return Float=(Light Number),light\LIGHT DIRECTION Z.htm
makeMatrix ,Matrix Number, Width, Height, XSegments, ZSegments,matrix\MAKE MATRIX.htm
deleteMatrix ,Matrix Number,matrix\DELETE MATRIX.htm
prepareMatrixTexture ,Matrix Number, Image Number, Across, Down,matrix\PREPARE MATRIX TEXTURE.htm
positionMatrix ,Matrix Number, X, Y, Z,matrix\POSITION MATRIX.htm
fillMatrix ,Matrix Number, Height, Tile Number,matrix\FILL MATRIX.htm
randomizeMatrix ,Matrix Number, Maximum Height,matrix\RANDOMIZE MATRIX.htm
ghostMatrixOn ,Matrix Number,matrix\GHOST MATRIX ON.htm
ghostMatrixOff ,Matrix Number,matrix\GHOST MATRIX OFF.htm
setMatrixWireframeOn ,Matrix Number,matrix\SET MATRIX WIREFRAME ON.htm
setMatrixWireframeOff ,Matrix Number,matrix\SET MATRIX WIREFRAME OFF.htm
setVector3ToMatrixPosition ,Vector, Matrix Number,matrix\SET VECTOR3 TO MATRIX POSITION.htm
setMatrixTexture ,Matrix Number, Texture Mode, Mip Mode,matrix\SET MATRIX TEXTURE.htm
setMatrix ,Matrix Number, Wire, Transparency, Cull, Filter, Light, Fog, Ambient,matrix\SET MATRIX.htm
setMatrixTrim ,Matrix Number, TrimX, TrimY,matrix\SET MATRIX TRIM.htm
setMatrixPriority ,Matrix Number, Priority Flag,matrix\SET MATRIX PRIORITY.htm
shiftMatrixDown ,Matrix Number,matrix\SHIFT MATRIX DOWN.htm
shiftMatrixLeft ,Matrix Number,matrix\SHIFT MATRIX LEFT.htm
shiftMatrixRight ,Matrix Number,matrix\SHIFT MATRIX RIGHT.htm
shiftMatrixUp ,Matrix Number,matrix\SHIFT MATRIX UP.htm
setMatrixHeight ,Matrix Number, TileX, TileZ, Height,matrix\SET MATRIX HEIGHT.htm
setMatrixNormal ,Matrix Number, TileX, TileZ, NX, NY, NZ,matrix\SET MATRIX NORMAL.htm
setMatrixTile ,Matrix Number, TileX, TileZ, Tile Number,matrix\SET MATRIX TILE.htm
updateMatrix ,Matrix Number,matrix\UPDATE MATRIX.htm
matrixExist(,Return Integer=(Matrix Number),matrix\MATRIX EXIST.htm
matrixPositionX(,Return Float=(Matrix Number),matrix\MATRIX POSITION X.htm
matrixPositionY(,Return Float=(Matrix Number),matrix\MATRIX POSITION Y.htm
matrixPositionZ(,Return Float=(Matrix Number),matrix\MATRIX POSITION Z.htm
matrixTileCount(,Return Integer=(Matrix Number),matrix\MATRIX TILE COUNT.htm
matrixTilesExist(,Return Integer=(Matrix Number),matrix\MATRIX TILES EXIST.htm
matrixWireframeState(,Return Integer=(Matrix Number),matrix\MATRIX WIREFRAME STATE.htm
getGroundHeight(,Return Float=(Matrix Number, X, Z),matrix\GET GROUND HEIGHT.htm
getMatrixHeight(,Return Float=(Matrix Number, TileX, TileZ),matrix\GET MATRIX HEIGHT.htm
makeMemblock ,Memblock Number, Size in Bytes,memblocks\MAKE MEMBLOCK.htm
makeMemblockFromBitmap ,Memblock Number, Bitmap Number,memblocks\MAKE MEMBLOCK FROM BITMAP.htm
makeMemblockFromImage ,Memblock Number,Image Number,memblocks\MAKE MEMBLOCK FROM IMAGE.htm
makeMemblockFromSound ,Memblock Number, Sound Number,memblocks\MAKE MEMBLOCK FROM SOUND.htm
makeMemblockFromMesh ,Memblock Number,Mesh Number,memblocks\MAKE MEMBLOCK FROM MESH.htm
deleteMemblock ,Memblock Number,memblocks\DELETE MEMBLOCK.htm
copyMemblock ,From,To,PosFrom,PosTo,Bytes,memblocks\COPY MEMBLOCK.htm
makeBitmapFromMemblock ,Bitmap Number,Memblock Number,memblocks\MAKE BITMAP FROM MEMBLOCK.htm
makeImageFromMemblock ,Image Number, Memblock Number,memblocks\MAKE IMAGE FROM MEMBLOCK.htm
makeSoundFromMemblock ,Sound Number, Memblock Number,memblocks\MAKE SOUND FROM MEMBLOCK.htm
makeMeshFromMemblock ,Mesh Number, Memblock Number,memblocks\MAKE MESH FROM MEMBLOCK.htm
changeMeshFromMemblock ,Mesh Number,Memblock Number,memblocks\CHANGE MESH FROM MEMBLOCK.htm
writeMemblockByte ,Memblock Number, Position, Byte,memblocks\WRITE MEMBLOCK BYTE.htm
writeMemblockWord ,Memblock Number, Position, Word,memblocks\WRITE MEMBLOCK WORD.htm
writeMemblockDword ,Memblock Number, Position, DWord,memblocks\WRITE MEMBLOCK DWORD.htm
writeMemblockFloat ,Memblock Number, Position, Float,memblocks\WRITE MEMBLOCK FLOAT.htm
memblockExist(,Return Integer=(Memblock Number),memblocks\MEMBLOCK EXIST.htm
getMemblockPtr(,Return DWORD=(Memblock Number),memblocks\GET MEMBLOCK PTR.htm
getMemblockSize(,Return Integer=(Memblock Number),memblocks\GET MEMBLOCK SIZE.htm
memblockByte(,Return Integer=(Memblock Number, Position),memblocks\MEMBLOCK BYTE.htm
memblockWord(,Return Integer=(Memblock Number, Position),memblocks\MEMBLOCK WORD.htm
memblockDword(,Return DWORD=(Memblock Number, Position),memblocks\MEMBLOCK DWORD.htm
memblockFloat(,Return Float=(Memblock Number, Position),memblocks\MEMBLOCK FLOAT.htm
defaultNetGame(,Return Integer=(Gamename, Playername, Number Of Players, Game Type),multiplayer\DEFAULT NET GAME.htm
createNetGame ,Gamename, Playername, Number Of Players,multiplayer\CREATE NET GAME.htm
joinNetGame ,Session Number, Playername,multiplayer\JOIN NET GAME.htm
freeNetGame,,multiplayer\FREE NET GAME.htm
createNetPlayer ,Playername,multiplayer\CREATE NET PLAYER.htm
freeNetPlayer ,Player Number,multiplayer\FREE NET PLAYER.htm
setNetConnection ,Connection Number,multiplayer\SET NET CONNECTION.htm
performChecklistForNetConnections,,multiplayer\PERFORM CHECKLIST FOR NET CONNECTIONS.htm
performChecklistForNetSessions,,multiplayer\PERFORM CHECKLIST FOR NET SESSIONS.htm
performChecklistForNetPlayers,,multiplayer\PERFORM CHECKLIST FOR NET PLAYERS.htm
sendNetMessageInteger ,Player Number, Integer Value,multiplayer\SEND NET MESSAGE INTEGER.htm
sendNetMessageFloat ,Player Number, Float Value,multiplayer\SEND NET MESSAGE FLOAT.htm
sendNetMessageString ,Player Number, String,multiplayer\SEND NET MESSAGE STRING.htm
sendNetMessageMemblock ,Player Number, Memblock Number,multiplayer\SEND NET MESSAGE MEMBLOCK.htm
sendNetMessageBitmap ,Player Number, Bitmap Number, Guarentee Packet,multiplayer\SEND NET MESSAGE BITMAP.htm
sendNetMessageImage ,Player Number, Image Number, Guarentee Packet,multiplayer\SEND NET MESSAGE IMAGE.htm
sendNetMessageSound ,Player Number, Sound Number, Guarentee Packet,multiplayer\SEND NET MESSAGE SOUND.htm
sendNetMessageMesh ,Player Number, Mesh Number, Guarentee Packet,multiplayer\SEND NET MESSAGE MESH.htm
getNetMessage,,multiplayer\GET NET MESSAGE.htm
netMessageInteger(,Return Integer=(),multiplayer\NET MESSAGE INTEGER.htm
netMessageFloat(,Return Float=(),multiplayer\NET MESSAGE FLOAT.htm
netMessageString$(,Return String=NET MESSAGE STRING$(),multiplayer\NET MESSAGE STRING$.htm
netMessageMemblock ,Memblock Number,multiplayer\NET MESSAGE MEMBLOCK.htm
netMessageImage ,Image Number,multiplayer\NET MESSAGE IMAGE.htm
netMessageBitmap ,Bitmap Number,multiplayer\NET MESSAGE BITMAP.htm
netMessageSound ,Sound Number,multiplayer\NET MESSAGE SOUND.htm
netMessageMesh ,Mesh Number,multiplayer\NET MESSAGE MESH.htm
netGameExists(,Return Integer=(),multiplayer\NET GAME EXISTS.htm
netMessageExists(,Return Integer=(),multiplayer\NET MESSAGE EXISTS.htm
netMessagePlayerFrom(,Return Integer=(),multiplayer\NET MESSAGE PLAYER FROM.htm
netMessagePlayerTo(,Return Integer=(),multiplayer\NET MESSAGE PLAYER TO.htm
netMessageType(,Return Integer=(),multiplayer\NET MESSAGE TYPE.htm
netGameLost(,Return Integer=(),multiplayer\NET GAME LOST.htm
netGameNowHosting(,Return Integer=(),multiplayer\NET GAME NOW HOSTING.htm
netBufferSize(,Return Integer=(),multiplayer\NET BUFFER SIZE.htm
netPlayerDestroyed(,Return Integer=(),multiplayer\NET PLAYER DESTROYED.htm
netPlayerCreated(,Return Integer=(),multiplayer\NET PLAYER CREATED.htm
loadMusic ,Filename,Music Number,music\LOAD MUSIC.htm
loadCdmusic ,Track Number,Music Number,music\LOAD CDMUSIC.htm
deleteMusic ,Music Number,music\DELETE MUSIC.htm
playMusic ,Music Number,music\PLAY MUSIC.htm
loopMusic ,Music Number,music\LOOP MUSIC.htm
stopMusic ,Music Number,music\STOP MUSIC.htm
pauseMusic ,Music Number,music\PAUSE MUSIC.htm
resumeMusic ,Music Number,music\RESUME MUSIC.htm
setMusicSpeed ,Music Number,Speed,music\SET MUSIC SPEED.htm
setMusicVolume ,Music Number,Volume,music\SET MUSIC VOLUME.htm
musicExist(,Return Integer=(Music Number),music\MUSIC EXIST.htm
musicPlaying(,Return Integer=(Music Number),music\MUSIC PLAYING.htm
musicLooping(,Return Integer=(Music Number),music\MUSIC LOOPING.htm
musicPaused(,Return Integer=(Music Number),music\MUSIC PAUSED.htm
musicSpeed(,Return Integer=(Music Number),music\MUSIC SPEED.htm
musicVolume(,Return Integer=(Music Number),music\MUSIC VOLUME.htm
getNumberOfCdTracks(,Return Integer=(),music\GET NUMBER OF CD TRACKS.htm
makeParticles ,Particle Number, Image Number, Frequency, Radius,particles\MAKE PARTICLES.htm
makeSnowParticles ,Particle Number, Image Number, Frequency, X, Y, Z, Width, Height, Depth,particles\MAKE SNOW PARTICLES.htm
makeFireParticles ,Particle Number, Image Number, Frequency, X, Y, Z, Width, Height, Depth,particles\MAKE FIRE PARTICLES.htm
deleteParticles ,Particle Number,particles\DELETE PARTICLES.htm
showParticles ,Integer Value,particles\SHOW PARTICLES.htm
hideParticles ,Particle Number,particles\HIDE PARTICLES.htm
positionParticles ,Particle Number, X, Y, Z,particles\POSITION PARTICLES.htm
positionParticleEmissions ,Particle Number, X, Y, Z,particles\POSITION PARTICLE EMISSIONS.htm
rotateParticles ,Particle Number, X, Y, Z,particles\ROTATE PARTICLES.htm
setVector3ToParticlesPosition ,Vector, Particle Number,particles\SET VECTOR3 TO PARTICLES POSITION.htm
setVector3ToParticlesRotation ,Vector, Particle Number,particles\SET VECTOR3 TO PARTICLES ROTATION.htm
colorParticles ,Particle Number, Red, Green, Blue,particles\COLOR PARTICLES.htm
setParticleEmissions ,Particle Number, Frequency,particles\SET PARTICLE EMISSIONS.htm
setParticleVelocity ,Particle Number, Velocity Value,particles\SET PARTICLE VELOCITY.htm
setParticleGravity ,Particle Number, Gravity Value,particles\SET PARTICLE GRAVITY.htm
setParticleSpeed ,Particle Number, Seconds Per Frame,particles\SET PARTICLE SPEED.htm
setParticleChaos ,Particle Number, Chaos Value,particles\SET PARTICLE CHAOS.htm
setParticleFloor ,Particle Number, Floor Flag,particles\SET PARTICLE FLOOR.htm
setParticleLife ,Particle Number, Life Percentage,particles\SET PARTICLE LIFE.htm
ghostParticlesOn ,Particle Number, Ghost Mode,particles\GHOST PARTICLES ON.htm
ghostParticlesOff ,Particle Number,particles\GHOST PARTICLES OFF.htm
particlesExist(,Return Integer=(Particle Number),particles\PARTICLES EXIST.htm
particlesPositionX(,Return Float=(Particle Number),particles\PARTICLES POSITION X.htm
particlesPositionY(,Return Float=(Particle Number),particles\PARTICLES POSITION Y.htm
particlesPositionZ(,Return Float=(Particle Number),particles\PARTICLES POSITION Z.htm
loadSound ,Filename,Sound Number,sound\LOAD SOUND.htm
load3dsound ,Filename,Sound Number,sound\LOAD 3DSOUND.htm
saveSound ,Filename,Sound Number,sound\SAVE SOUND.htm
deleteSound ,Sound Number,sound\DELETE SOUND.htm
cloneSound ,Destination Sound,Source Sound,sound\CLONE SOUND.htm
playSound ,Sound Number,sound\PLAY SOUND.htm
loopSound ,Sound Number,sound\LOOP SOUND.htm
stopSound ,Sound Number,sound\STOP SOUND.htm
pauseSound ,Sound Number,sound\PAUSE SOUND.htm
resumeSound ,Sound Number,sound\RESUME SOUND.htm
positionSound ,Sound Number,X,Y,Z,sound\POSITION SOUND.htm
recordSound ,Sound Number,sound\RECORD SOUND.htm
stopRecordingSound,,sound\STOP RECORDING SOUND.htm
setSoundPan ,Sound Number,Pan Value,sound\SET SOUND PAN.htm
setSoundSpeed ,Sound Number,Frequency Value,sound\SET SOUND SPEED.htm
setSoundVolume ,Sound Number,Volume Number,sound\SET SOUND VOLUME.htm
positionListener ,X,Y,Z,sound\POSITION LISTENER.htm
rotateListener ,X,Y,Z,sound\ROTATE LISTENER.htm
scaleListener ,Scaling Factor,sound\SCALE LISTENER.htm
soundExist(,Return Integer=(Sound Number),sound\SOUND EXIST.htm
soundType(,Return Integer=(Sound Number),sound\SOUND TYPE.htm
soundPlaying(,Return Integer=(Sound Number),sound\SOUND PLAYING.htm
soundLooping(,Return Integer=(Sound Number),sound\SOUND LOOPING.htm
soundPaused(,Return Integer=(Sound Number),sound\SOUND PAUSED.htm
soundPositionX(,Return Float=(Sound Number),sound\SOUND POSITION X.htm
soundPositionY(,Return Float=(Sound Number),sound\SOUND POSITION Y.htm
soundPositionZ(,Return Float=(Sound Number),sound\SOUND POSITION Z.htm
soundPan(,Return Integer=(Sound Number),sound\SOUND PAN.htm
soundSpeed(,Return Integer=(Sound Number),sound\SOUND SPEED.htm
soundVolume(,Return Integer=(Sound Number),sound\SOUND VOLUME.htm
listenerPositionX(,Return Float=(),sound\LISTENER POSITION X.htm
listenerPositionY(,Return Float=(),sound\LISTENER POSITION Y.htm
listenerPositionZ(,Return Float=(),sound\LISTENER POSITION Z.htm
listenerAngleX(,Return Float=(),sound\LISTENER ANGLE X.htm
listenerAngleY(,Return Float=(),sound\LISTENER ANGLE Y.htm
listenerAngleZ(,Return Float=(),sound\LISTENER ANGLE Z.htm
sprite ,Sprite Number, XPos, YPos, Image Number,sprite\SPRITE.htm
setSprite ,Sprite Number, Backsave, Transparency,sprite\SET SPRITE.htm
deleteSprite ,Sprite Number,sprite\DELETE SPRITE.htm
cloneSprite ,Sprite Number, Destination Sprite Number,sprite\CLONE SPRITE.htm
showSprite ,Sprite Number,sprite\SHOW SPRITE.htm
hideSprite ,Sprite Number,sprite\HIDE SPRITE.htm
hideAllSprites,,sprite\HIDE ALL SPRITES.htm
showAllSprites,,sprite\SHOW ALL SPRITES.htm
moveSprite ,Sprite Number, Velocity,sprite\MOVE SPRITE.htm
offsetSprite ,Sprite Number, XOffset, YOffset,sprite\OFFSET SPRITE.htm
scaleSprite ,Sprite Number, Scale,sprite\SCALE SPRITE.htm
sizeSprite ,Sprite Number, XSize, YSize,sprite\SIZE SPRITE.htm
stretchSprite ,Sprite Number, XScale, YScale,sprite\STRETCH SPRITE.htm
rotateSprite ,Sprite Number, Angle,sprite\ROTATE SPRITE.htm
flipSprite ,Sprite Number,sprite\FLIP SPRITE.htm
mirrorSprite ,Sprite Number,sprite\MIRROR SPRITE.htm
pasteSprite ,Sprite Number, XPos, YPos,sprite\PASTE SPRITE.htm
createAnimatedSprite ,Sprite Number, Filename, Frame Across, Frame Down, Image Number,sprite\CREATE ANIMATED SPRITE.htm
playSprite ,Sprite Number, Start Frame, End Frame, Delay Value,sprite\PLAY SPRITE.htm
setSpriteFrame ,Sprite Number, Frame Value,sprite\SET SPRITE FRAME.htm
setSpritePriority ,Sprite Number, Priority,sprite\SET SPRITE PRIORITY.htm
setSpriteImage ,Sprite Number, Image Number,sprite\SET SPRITE IMAGE.htm
setSpriteAlpha ,Sprite Number, Alpha Value,sprite\SET SPRITE ALPHA.htm
setSpriteDiffuse ,Sprite Number, Red Value, Green Value, Blue Value,sprite\SET SPRITE DIFFUSE.htm
setSpriteTextureCoord ,Sprite Number, Vertex Index, UValue, VValue,sprite\SET SPRITE TEXTURE COORD.htm
spriteExist(,Return Integer=(Sprite Number),sprite\SPRITE EXIST.htm
spriteX(,Return Integer=(Sprite Number),sprite\SPRITE X.htm
spriteY(,Return Integer=(Sprite Number),sprite\SPRITE Y.htm
spriteOffsetX(,Return Integer=(Sprite Number),sprite\SPRITE OFFSET X.htm
spriteOffsetY(,Return Integer=(Sprite Number),sprite\SPRITE OFFSET Y.htm
spriteScaleX(,Return Integer=(Sprite Number),sprite\SPRITE SCALE X.htm
spriteScaleY(,Return Integer=(Sprite Number),sprite\SPRITE SCALE Y.htm
spriteWidth(,Return Integer=(Sprite Number),sprite\SPRITE WIDTH.htm
spriteHeight(,Return Integer=(Sprite Number),sprite\SPRITE HEIGHT.htm
spriteImage(,Return Integer=(Sprite Number),sprite\SPRITE IMAGE.htm
spriteMirrored(,Return Integer=(Sprite Number),sprite\SPRITE MIRRORED.htm
spriteFlipped(,Return Integer=(Sprite Number),sprite\SPRITE FLIPPED.htm
spriteHit(,Return Integer=(Sprite Number, Target Sprite Number),sprite\SPRITE HIT.htm
spriteCollision(,Return Integer=(Sprite Number, Target Sprite Number),sprite\SPRITE COLLISION.htm
spriteAngle(,Return Float=(Sprite Number),sprite\SPRITE ANGLE.htm
spriteFrame(,Return Integer=(Sprite Number),sprite\SPRITE FRAME.htm
spriteAlpha(,Return Integer=(Sprite Number),sprite\SPRITE ALPHA.htm
spriteRed(,Return Integer=(Sprite Number),sprite\SPRITE RED.htm
spriteGreen(,Return Integer=(Sprite Number),sprite\SPRITE GREEN.htm
spriteBlue(,Return Integer=(Sprite Number),sprite\SPRITE BLUE.htm
spriteVisible(,Return Integer=(Sprite Number),sprite\SPRITE VISIBLE.htm
loadDll ,DLLName, DLL Number,system\LOAD DLL.htm
deleteDll ,DLL Number,system\DELETE DLL.htm
callDll ,DLL Number, Function Name,system\CALL DLL.htm
dllExist(,Return Integer=(DLL Number),system\DLL EXIST.htm
dllCallExist(,Return Integer=(DLL Number, Function Name),system\DLL CALL EXIST.htm
emptyChecklist,,system\EMPTY CHECKLIST.htm
checklistQuantity(,Return Integer=(),system\CHECKLIST QUANTITY.htm
checklistString$(,Return String=CHECKLIST STRING$(Integer Value),system\CHECKLIST STRING$.htm
checklistValueA(,Return Integer=(Integer Value),system\CHECKLIST VALUE A.htm
checklistValueB(,Return Integer=(Integer Value),system\CHECKLIST VALUE B.htm
checklistValueC(,Return Integer=(Integer Value),system\CHECKLIST VALUE C.htm
checklistValueD(,Return Integer=(Integer Value),system\CHECKLIST VALUE D.htm
disableEscapekey,,system\DISABLE ESCAPEKEY.htm
enableEscapekey,,system\ENABLE ESCAPEKEY.htm
disableSystemkeys,,system\DISABLE SYSTEMKEYS.htm
enableSystemkeys,,system\ENABLE SYSTEMKEYS.htm
exitPrompt ,Message String, Caption String,system\EXIT PROMPT.htm
systemTmemAvailable(,Return Integer=(),system\SYSTEM TMEM AVAILABLE.htm
systemDmemAvailable(,Return Integer=(),system\SYSTEM DMEM AVAILABLE.htm
systemSmemAvailable(,Return Integer=(),system\SYSTEM SMEM AVAILABLE.htm
text ,X,Y,String,text\TEXT.htm
centerText ,X,Y,String,text\CENTER TEXT.htm
setTextFont ,Fontname,text\SET TEXT FONT.htm
setTextSize ,Point size,text\SET TEXT SIZE.htm
setTextOpaque,,text\SET TEXT OPAQUE.htm
setTextTransparent,,text\SET TEXT TRANSPARENT.htm
setTextToNormal,,text\SET TEXT TO NORMAL.htm
setTextToItalic,,text\SET TEXT TO ITALIC.htm
setTextToBold,,text\SET TEXT TO BOLD.htm
setTextToBolditalic,,text\SET TEXT TO BOLDITALIC.htm
performChecklistForFonts,,text\PERFORM CHECKLIST FOR FONTS.htm
textBackgroundType(,Return Integer=(),text\TEXT BACKGROUND TYPE.htm
textFont$(,Return String=TEXT FONT$(),text\TEXT FONT$.htm
textSize(,Return Integer=(),text\TEXT SIZE.htm
textStyle(,Return Integer=(),text\TEXT STYLE.htm
textWidth(,Return Integer=(String),text\TEXT WIDTH.htm
textHeight(,Return Integer=(String),text\TEXT HEIGHT.htm
asc(,Return Integer=(String),text\ASC.htm
bin$(,Return String=BIN$(Value),text\BIN$.htm
chr$(,Return String=CHR$(Value),text\CHR$.htm
hex$(,Return String=HEX$(Value),text\HEX$.htm
left$(,Return String=LEFT$(String,Value),text\LEFT$.htm
len(,Return Integer=(String),text\LEN.htm
lower$(,Return String=LOWER$(String),text\LOWER$.htm
mid$(,Return String=MID$(String,Value),text\MID$.htm
right$(,Return String=RIGHT$(String,Value),text\RIGHT$.htm
str$(,Return String=STR$(Value),text\STR$.htm
upper$(,Return String=UPPER$(String),text\UPPER$.htm
val(,Return Float=(String),text\VAL.htm
space$(,Return String=SPACE$(Number of Spaces),text\SPACE$.htm
loadBsp ,PK3 Filename, BSP Filename,world\LOAD BSP.htm
deleteBsp,,world\DELETE BSP.htm
setBspCamera ,Camera Number,world\SET BSP CAMERA.htm
setBspCameraCollision ,Collision Index, Camera Number, Radius, Response,world\SET BSP CAMERA COLLISION.htm
setBspObjectCollision ,Collision Index, Object Number, Radius, Response,world\SET BSP OBJECT COLLISION.htm
setBspCollisionThreshhold ,Collision Index, Sensitivity,world\SET BSP COLLISION THRESHHOLD.htm
setBspCollisionOff ,Collision Index,world\SET BSP COLLISION OFF.htm
setBspCameraCollisionRadius ,Collision Index, Camera Number, X, Y, Z,world\SET BSP CAMERA COLLISION RADIUS.htm
setBspObjectCollisionRadius ,Collision Index, Object Number, X, Y, Z,world\SET BSP OBJECT COLLISION RADIUS.htm
setBspCollisionHeightAdjustment ,Collision Index, Height,world\SET BSP COLLISION HEIGHT ADJUSTMENT.htm
setBspMultitexturingOn,,world\SET BSP MULTITEXTURING ON.htm
setBspMultitexturingOff,,world\SET BSP MULTITEXTURING OFF.htm
processBspCollision ,Collision Index,world\PROCESS BSP COLLISION.htm
makeTerrain ,Terrain Number, Heightmap Filename,world\MAKE TERRAIN.htm
deleteTerrain ,Terrain Number,world\DELETE TERRAIN.htm
positionTerrain ,Terrain Number, X, Y, Z,world\POSITION TERRAIN.htm
textureTerrain ,Terrain Number, Image Number,world\TEXTURE TERRAIN.htm
bspCollisionHit(,Return Integer=(Collision Index),world\BSP COLLISION HIT.htm
bspCollisionX(,Return Float=(Collision Index),world\BSP COLLISION X.htm
bspCollisionY(,Return Float=(Collision Index),world\BSP COLLISION Y.htm
bspCollisionZ(,Return Float=(Collision Index),world\BSP COLLISION Z.htm
terrainExist(,Return Integer=(Terrain Number),world\TERRAIN EXIST.htm
terrainPositionX(,Return Float=(Terrain Number),world\TERRAIN POSITION X.htm
terrainPositionY(,Return Float=(Terrain Number),world\TERRAIN POSITION Y.htm
terrainPositionZ(,Return Float=(Terrain Number),world\TERRAIN POSITION Z.htm
getTerrainHeight(,Return Float=(Terrain Number, X, Z),world\GET TERRAIN HEIGHT.htm
getTotalTerrainHeight(,Return Float=(Terrain Number),world\GET TOTAL TERRAIN HEIGHT.htm
